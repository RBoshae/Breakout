
CS120B_Final_Project_Part2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c4  00800100  000016e6  0000177a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000016e6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000082  008001c4  008001c4  0000183e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000183e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001870  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  000018b0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c96  00000000  00000000  000019f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aa3  00000000  00000000  0000368e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000172f  00000000  00000000  00004131  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000314  00000000  00000000  00005860  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b68  00000000  00000000  00005b74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011bf  00000000  00000000  000066dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  0000789b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	75 c0       	rjmp	.+234    	; 0xec <__ctors_end>
       2:	00 00       	nop
       4:	92 c0       	rjmp	.+292    	; 0x12a <__bad_interrupt>
       6:	00 00       	nop
       8:	90 c0       	rjmp	.+288    	; 0x12a <__bad_interrupt>
       a:	00 00       	nop
       c:	8e c0       	rjmp	.+284    	; 0x12a <__bad_interrupt>
       e:	00 00       	nop
      10:	8c c0       	rjmp	.+280    	; 0x12a <__bad_interrupt>
      12:	00 00       	nop
      14:	8a c0       	rjmp	.+276    	; 0x12a <__bad_interrupt>
      16:	00 00       	nop
      18:	88 c0       	rjmp	.+272    	; 0x12a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	86 c0       	rjmp	.+268    	; 0x12a <__bad_interrupt>
      1e:	00 00       	nop
      20:	84 c0       	rjmp	.+264    	; 0x12a <__bad_interrupt>
      22:	00 00       	nop
      24:	82 c0       	rjmp	.+260    	; 0x12a <__bad_interrupt>
      26:	00 00       	nop
      28:	80 c0       	rjmp	.+256    	; 0x12a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7e c0       	rjmp	.+252    	; 0x12a <__bad_interrupt>
      2e:	00 00       	nop
      30:	7c c0       	rjmp	.+248    	; 0x12a <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 5a 0a 	jmp	0x14b4	; 0x14b4 <__vector_13>
      38:	78 c0       	rjmp	.+240    	; 0x12a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	76 c0       	rjmp	.+236    	; 0x12a <__bad_interrupt>
      3e:	00 00       	nop
      40:	74 c0       	rjmp	.+232    	; 0x12a <__bad_interrupt>
      42:	00 00       	nop
      44:	72 c0       	rjmp	.+228    	; 0x12a <__bad_interrupt>
      46:	00 00       	nop
      48:	70 c0       	rjmp	.+224    	; 0x12a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6e c0       	rjmp	.+220    	; 0x12a <__bad_interrupt>
      4e:	00 00       	nop
      50:	6c c0       	rjmp	.+216    	; 0x12a <__bad_interrupt>
      52:	00 00       	nop
      54:	6a c0       	rjmp	.+212    	; 0x12a <__bad_interrupt>
      56:	00 00       	nop
      58:	68 c0       	rjmp	.+208    	; 0x12a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	66 c0       	rjmp	.+204    	; 0x12a <__bad_interrupt>
      5e:	00 00       	nop
      60:	64 c0       	rjmp	.+200    	; 0x12a <__bad_interrupt>
      62:	00 00       	nop
      64:	62 c0       	rjmp	.+196    	; 0x12a <__bad_interrupt>
      66:	00 00       	nop
      68:	60 c0       	rjmp	.+192    	; 0x12a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5e c0       	rjmp	.+188    	; 0x12a <__bad_interrupt>
      6e:	00 00       	nop
      70:	5c c0       	rjmp	.+184    	; 0x12a <__bad_interrupt>
      72:	00 00       	nop
      74:	5a c0       	rjmp	.+180    	; 0x12a <__bad_interrupt>
      76:	00 00       	nop
      78:	58 c0       	rjmp	.+176    	; 0x12a <__bad_interrupt>
      7a:	00 00       	nop
      7c:	56 c0       	rjmp	.+172    	; 0x12a <__bad_interrupt>
      7e:	00 00       	nop
      80:	54 c0       	rjmp	.+168    	; 0x12a <__bad_interrupt>
      82:	00 00       	nop
      84:	52 c0       	rjmp	.+164    	; 0x12a <__bad_interrupt>
      86:	00 00       	nop
      88:	50 c0       	rjmp	.+160    	; 0x12a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	7d 01       	movw	r14, r26
      8e:	82 01       	movw	r16, r4
      90:	87 01       	movw	r16, r14
      92:	9a 01       	movw	r18, r20
      94:	b9 01       	movw	r22, r18
      96:	ca 03       	fmulsu	r20, r18
      98:	ca 03       	fmulsu	r20, r18
      9a:	da 01       	movw	r26, r20
      9c:	8a 02       	muls	r24, r26
      9e:	41 03       	mulsu	r20, r17
      a0:	81 03       	fmuls	r16, r17
      a2:	da 03       	fmulsu	r21, r18
      a4:	e1 03       	fmuls	r22, r17
      a6:	25 04       	cpc	r2, r5
      a8:	25 04       	cpc	r2, r5
      aa:	e8 03       	fmulsu	r22, r16
      ac:	ee 03       	fmulsu	r22, r22
      ae:	f4 03       	fmuls	r23, r20
      b0:	0e 04       	cpc	r0, r14
      b2:	02 04       	cpc	r0, r2
      b4:	1a 04       	cpc	r1, r10
      b6:	cc 05       	cpc	r28, r12
      b8:	ea 05       	cpc	r30, r10
      ba:	44 05       	cpc	r20, r4
      bc:	57 05       	cpc	r21, r7
      be:	41 05       	cpc	r20, r1
      c0:	41 05       	cpc	r20, r1
      c2:	a4 05       	cpc	r26, r4
      c4:	9c 06       	cpc	r9, r28
      c6:	9f 06       	cpc	r9, r31
      c8:	a4 06       	cpc	r10, r20
      ca:	43 08       	sbc	r4, r3
      cc:	ad 06       	cpc	r10, r29
      ce:	39 07       	cpc	r19, r25
      d0:	3f 07       	cpc	r19, r31
      d2:	44 07       	cpc	r20, r20
      d4:	68 07       	cpc	r22, r24
      d6:	08 07       	cpc	r16, r24
      d8:	99 07       	cpc	r25, r25
      da:	00 0a       	sbc	r0, r16
      dc:	00 0a       	sbc	r0, r16
      de:	3b 09       	sbc	r19, r11
      e0:	41 09       	sbc	r20, r1
      e2:	00 0a       	sbc	r0, r16
      e4:	00 0a       	sbc	r0, r16
      e6:	00 0a       	sbc	r0, r16
      e8:	00 0a       	sbc	r0, r16
      ea:	b6 08       	sbc	r11, r6

000000ec <__ctors_end>:
      ec:	11 24       	eor	r1, r1
      ee:	1f be       	out	0x3f, r1	; 63
      f0:	cf ef       	ldi	r28, 0xFF	; 255
      f2:	d0 e4       	ldi	r29, 0x40	; 64
      f4:	de bf       	out	0x3e, r29	; 62
      f6:	cd bf       	out	0x3d, r28	; 61

000000f8 <__do_copy_data>:
      f8:	11 e0       	ldi	r17, 0x01	; 1
      fa:	a0 e0       	ldi	r26, 0x00	; 0
      fc:	b1 e0       	ldi	r27, 0x01	; 1
      fe:	e6 ee       	ldi	r30, 0xE6	; 230
     100:	f6 e1       	ldi	r31, 0x16	; 22
     102:	00 e0       	ldi	r16, 0x00	; 0
     104:	0b bf       	out	0x3b, r16	; 59
     106:	02 c0       	rjmp	.+4      	; 0x10c <__do_copy_data+0x14>
     108:	07 90       	elpm	r0, Z+
     10a:	0d 92       	st	X+, r0
     10c:	a4 3c       	cpi	r26, 0xC4	; 196
     10e:	b1 07       	cpc	r27, r17
     110:	d9 f7       	brne	.-10     	; 0x108 <__do_copy_data+0x10>

00000112 <__do_clear_bss>:
     112:	22 e0       	ldi	r18, 0x02	; 2
     114:	a4 ec       	ldi	r26, 0xC4	; 196
     116:	b1 e0       	ldi	r27, 0x01	; 1
     118:	01 c0       	rjmp	.+2      	; 0x11c <.do_clear_bss_start>

0000011a <.do_clear_bss_loop>:
     11a:	1d 92       	st	X+, r1

0000011c <.do_clear_bss_start>:
     11c:	a6 34       	cpi	r26, 0x46	; 70
     11e:	b2 07       	cpc	r27, r18
     120:	e1 f7       	brne	.-8      	; 0x11a <.do_clear_bss_loop>
     122:	0e 94 a8 0a 	call	0x1550	; 0x1550 <main>
     126:	0c 94 71 0b 	jmp	0x16e2	; 0x16e2 <_exit>

0000012a <__bad_interrupt>:
     12a:	6a cf       	rjmp	.-300    	; 0x0 <__vectors>

0000012c <turn_off_LED.2039>:
	//Enable global interrupts
	SREG |= 0x80;	// 0x80: 1000000
}

void TimerOff() {
	TCCR1B 	= 0x00; // bit3bit2bit1bit0=0000: timer off
     12c:	82 31       	cpi	r24, 0x12	; 18
     12e:	91 05       	cpc	r25, r1
     130:	68 f4       	brcc	.+26     	; 0x14c <turn_off_LED.2039+0x20>
     132:	fc 01       	movw	r30, r24
     134:	ee 5d       	subi	r30, 0xDE	; 222
     136:	fd 4f       	sbci	r31, 0xFD	; 253
     138:	10 82       	st	Z, r1
     13a:	fc 01       	movw	r30, r24
     13c:	ec 5c       	subi	r30, 0xCC	; 204
     13e:	fd 4f       	sbci	r31, 0xFD	; 253
     140:	10 82       	st	Z, r1
     142:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <SCORE>
     146:	8f 5f       	subi	r24, 0xFF	; 255
     148:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <SCORE>
     14c:	08 95       	ret

0000014e <paddle_collision_detection.2041>:
     14e:	2f 92       	push	r2
     150:	3f 92       	push	r3
     152:	ef 92       	push	r14
     154:	ff 92       	push	r15
     156:	0f 93       	push	r16
     158:	1f 93       	push	r17
     15a:	cf 93       	push	r28
     15c:	df 93       	push	r29
     15e:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <FLOOR>
     162:	86 95       	lsr	r24
     164:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <ball_row.2034>
     168:	89 13       	cpse	r24, r25
     16a:	a2 c0       	rjmp	.+324    	; 0x2b0 <paddle_collision_detection.2041+0x162>
     16c:	e0 90 03 01 	lds	r14, 0x0103	; 0x800103 <ball_column.2035>
     170:	6e 2d       	mov	r22, r14
     172:	70 e0       	ldi	r23, 0x00	; 0
     174:	80 e0       	ldi	r24, 0x00	; 0
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	f1 2c       	mov	r15, r1
     17a:	e4 e3       	ldi	r30, 0x34	; 52
     17c:	f2 e0       	ldi	r31, 0x02	; 2
     17e:	a7 e0       	ldi	r26, 0x07	; 7
     180:	b0 e0       	ldi	r27, 0x00	; 0
     182:	ab 01       	movw	r20, r22
     184:	08 2e       	mov	r0, r24
     186:	02 c0       	rjmp	.+4      	; 0x18c <paddle_collision_detection.2041+0x3e>
     188:	55 95       	asr	r21
     18a:	47 95       	ror	r20
     18c:	0a 94       	dec	r0
     18e:	e2 f7       	brpl	.-8      	; 0x188 <paddle_collision_detection.2041+0x3a>
     190:	30 81       	ld	r19, Z
     192:	23 2f       	mov	r18, r19
     194:	30 e0       	ldi	r19, 0x00	; 0
     196:	e9 01       	movw	r28, r18
     198:	08 2e       	mov	r0, r24
     19a:	02 c0       	rjmp	.+4      	; 0x1a0 <paddle_collision_detection.2041+0x52>
     19c:	d5 95       	asr	r29
     19e:	c7 95       	ror	r28
     1a0:	0a 94       	dec	r0
     1a2:	e2 f7       	brpl	.-8      	; 0x19c <paddle_collision_detection.2041+0x4e>
     1a4:	0c 2f       	mov	r16, r28
     1a6:	01 70       	andi	r16, 0x01	; 1
     1a8:	14 2f       	mov	r17, r20
     1aa:	11 70       	andi	r17, 0x01	; 1
     1ac:	40 ff       	sbrs	r20, 0
     1ae:	04 c0       	rjmp	.+8      	; 0x1b8 <paddle_collision_detection.2041+0x6a>
     1b0:	01 11       	cpse	r16, r1
     1b2:	39 c0       	rjmp	.+114    	; 0x226 <paddle_collision_detection.2041+0xd8>
     1b4:	f3 94       	inc	r15
     1b6:	3c c0       	rjmp	.+120    	; 0x230 <paddle_collision_detection.2041+0xe2>
     1b8:	11 11       	cpse	r17, r1
     1ba:	35 c0       	rjmp	.+106    	; 0x226 <paddle_collision_detection.2041+0xd8>
     1bc:	01 30       	cpi	r16, 0x01	; 1
     1be:	99 f5       	brne	.+102    	; 0x226 <paddle_collision_detection.2041+0xd8>
     1c0:	ac 01       	movw	r20, r24
     1c2:	ec 01       	movw	r28, r24
     1c4:	21 96       	adiw	r28, 0x01	; 1
     1c6:	02 c0       	rjmp	.+4      	; 0x1cc <paddle_collision_detection.2041+0x7e>
     1c8:	35 95       	asr	r19
     1ca:	27 95       	ror	r18
     1cc:	ca 95       	dec	r28
     1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <paddle_collision_detection.2041+0x7a>
     1d0:	20 fd       	sbrc	r18, 0
     1d2:	13 c0       	rjmp	.+38     	; 0x1fa <paddle_collision_detection.2041+0xac>
     1d4:	e1 01       	movw	r28, r2
     1d6:	28 81       	ld	r18, Y
     1d8:	39 81       	ldd	r19, Y+1	; 0x01
     1da:	29 30       	cpi	r18, 0x09	; 9
     1dc:	31 05       	cpc	r19, r1
     1de:	09 f0       	breq	.+2      	; 0x1e2 <paddle_collision_detection.2041+0x94>
     1e0:	5f c0       	rjmp	.+190    	; 0x2a0 <paddle_collision_detection.2041+0x152>
     1e2:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <RIGHT_WALL>
     1e6:	e2 12       	cpse	r14, r18
     1e8:	03 c0       	rjmp	.+6      	; 0x1f0 <paddle_collision_detection.2041+0xa2>
     1ea:	b9 83       	std	Y+1, r27	; 0x01
     1ec:	a8 83       	st	Y, r26
     1ee:	05 c0       	rjmp	.+10     	; 0x1fa <paddle_collision_detection.2041+0xac>
     1f0:	88 e0       	ldi	r24, 0x08	; 8
     1f2:	90 e0       	ldi	r25, 0x00	; 0
     1f4:	99 83       	std	Y+1, r25	; 0x01
     1f6:	88 83       	st	Y, r24
     1f8:	5b c0       	rjmp	.+182    	; 0x2b0 <paddle_collision_detection.2041+0x162>
     1fa:	20 81       	ld	r18, Z
     1fc:	30 e0       	ldi	r19, 0x00	; 0
     1fe:	41 50       	subi	r20, 0x01	; 1
     200:	51 09       	sbc	r21, r1
     202:	02 c0       	rjmp	.+4      	; 0x208 <paddle_collision_detection.2041+0xba>
     204:	35 95       	asr	r19
     206:	27 95       	ror	r18
     208:	4a 95       	dec	r20
     20a:	e2 f7       	brpl	.-8      	; 0x204 <paddle_collision_detection.2041+0xb6>
     20c:	20 fd       	sbrc	r18, 0
     20e:	10 c0       	rjmp	.+32     	; 0x230 <paddle_collision_detection.2041+0xe2>
     210:	e1 01       	movw	r28, r2
     212:	88 81       	ld	r24, Y
     214:	99 81       	ldd	r25, Y+1	; 0x01
     216:	0a 97       	sbiw	r24, 0x0a	; 10
     218:	09 f0       	breq	.+2      	; 0x21c <paddle_collision_detection.2041+0xce>
     21a:	42 c0       	rjmp	.+132    	; 0x2a0 <paddle_collision_detection.2041+0x152>
     21c:	87 e0       	ldi	r24, 0x07	; 7
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	99 83       	std	Y+1, r25	; 0x01
     222:	88 83       	st	Y, r24
     224:	45 c0       	rjmp	.+138    	; 0x2b0 <paddle_collision_detection.2041+0x162>
     226:	9e 01       	movw	r18, r28
     228:	24 2b       	or	r18, r20
     22a:	35 2b       	or	r19, r21
     22c:	20 ff       	sbrs	r18, 0
     22e:	05 c0       	rjmp	.+10     	; 0x23a <paddle_collision_detection.2041+0xec>
     230:	01 96       	adiw	r24, 0x01	; 1
     232:	88 30       	cpi	r24, 0x08	; 8
     234:	91 05       	cpc	r25, r1
     236:	09 f0       	breq	.+2      	; 0x23a <paddle_collision_detection.2041+0xec>
     238:	a4 cf       	rjmp	.-184    	; 0x182 <paddle_collision_detection.2041+0x34>
     23a:	f1 10       	cpse	r15, r1
     23c:	10 c0       	rjmp	.+32     	; 0x25e <paddle_collision_detection.2041+0x110>
     23e:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <RIGHT_WALL>
     242:	e8 12       	cpse	r14, r24
     244:	06 c0       	rjmp	.+12     	; 0x252 <paddle_collision_detection.2041+0x104>
     246:	87 e0       	ldi	r24, 0x07	; 7
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	f1 01       	movw	r30, r2
     24c:	91 83       	std	Z+1, r25	; 0x01
     24e:	80 83       	st	Z, r24
     250:	2f c0       	rjmp	.+94     	; 0x2b0 <paddle_collision_detection.2041+0x162>
     252:	88 e0       	ldi	r24, 0x08	; 8
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	e1 01       	movw	r28, r2
     258:	99 83       	std	Y+1, r25	; 0x01
     25a:	88 83       	st	Y, r24
     25c:	29 c0       	rjmp	.+82     	; 0x2b0 <paddle_collision_detection.2041+0x162>
     25e:	d1 e0       	ldi	r29, 0x01	; 1
     260:	fd 12       	cpse	r15, r29
     262:	12 c0       	rjmp	.+36     	; 0x288 <paddle_collision_detection.2041+0x13a>
     264:	f1 01       	movw	r30, r2
     266:	80 81       	ld	r24, Z
     268:	91 81       	ldd	r25, Z+1	; 0x01
     26a:	8a 30       	cpi	r24, 0x0A	; 10
     26c:	91 05       	cpc	r25, r1
     26e:	29 f4       	brne	.+10     	; 0x27a <paddle_collision_detection.2041+0x12c>
     270:	88 e0       	ldi	r24, 0x08	; 8
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	91 83       	std	Z+1, r25	; 0x01
     276:	80 83       	st	Z, r24
     278:	1b c0       	rjmp	.+54     	; 0x2b0 <paddle_collision_detection.2041+0x162>
     27a:	09 97       	sbiw	r24, 0x09	; 9
     27c:	c9 f4       	brne	.+50     	; 0x2b0 <paddle_collision_detection.2041+0x162>
     27e:	87 e0       	ldi	r24, 0x07	; 7
     280:	90 e0       	ldi	r25, 0x00	; 0
     282:	91 83       	std	Z+1, r25	; 0x01
     284:	80 83       	st	Z, r24
     286:	14 c0       	rjmp	.+40     	; 0x2b0 <paddle_collision_detection.2041+0x162>
     288:	d2 e0       	ldi	r29, 0x02	; 2
     28a:	fd 12       	cpse	r15, r29
     28c:	06 c0       	rjmp	.+12     	; 0x29a <paddle_collision_detection.2041+0x14c>
     28e:	87 e0       	ldi	r24, 0x07	; 7
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	f1 01       	movw	r30, r2
     294:	91 83       	std	Z+1, r25	; 0x01
     296:	80 83       	st	Z, r24
     298:	0b c0       	rjmp	.+22     	; 0x2b0 <paddle_collision_detection.2041+0x162>
     29a:	f8 e0       	ldi	r31, 0x08	; 8
     29c:	ff 16       	cp	r15, r31
     29e:	41 f0       	breq	.+16     	; 0x2b0 <paddle_collision_detection.2041+0x162>
     2a0:	83 e0       	ldi	r24, 0x03	; 3
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	e1 01       	movw	r28, r2
     2a6:	99 83       	std	Y+1, r25	; 0x01
     2a8:	88 83       	st	Y, r24
     2aa:	81 e0       	ldi	r24, 0x01	; 1
     2ac:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <gameEndTurn>
     2b0:	df 91       	pop	r29
     2b2:	cf 91       	pop	r28
     2b4:	1f 91       	pop	r17
     2b6:	0f 91       	pop	r16
     2b8:	ff 90       	pop	r15
     2ba:	ef 90       	pop	r14
     2bc:	3f 90       	pop	r3
     2be:	2f 90       	pop	r2
     2c0:	08 95       	ret

000002c2 <Ball_Tick>:
     2c2:	2f 92       	push	r2
     2c4:	3f 92       	push	r3
     2c6:	8f 92       	push	r8
     2c8:	9f 92       	push	r9
     2ca:	af 92       	push	r10
     2cc:	bf 92       	push	r11
     2ce:	cf 92       	push	r12
     2d0:	df 92       	push	r13
     2d2:	ef 92       	push	r14
     2d4:	ff 92       	push	r15
     2d6:	0f 93       	push	r16
     2d8:	1f 93       	push	r17
     2da:	cf 93       	push	r28
     2dc:	df 93       	push	r29
     2de:	00 d0       	rcall	.+0      	; 0x2e0 <Ball_Tick+0x1e>
     2e0:	cd b7       	in	r28, 0x3d	; 61
     2e2:	de b7       	in	r29, 0x3e	; 62
     2e4:	9a 83       	std	Y+2, r25	; 0x02
     2e6:	89 83       	std	Y+1, r24	; 0x01
     2e8:	8b 30       	cpi	r24, 0x0B	; 11
     2ea:	91 05       	cpc	r25, r1
     2ec:	08 f0       	brcs	.+2      	; 0x2f0 <Ball_Tick+0x2e>
     2ee:	52 c2       	rjmp	.+1188   	; 0x794 <__LOCK_REGION_LENGTH__+0x394>
     2f0:	fc 01       	movw	r30, r24
     2f2:	ea 5b       	subi	r30, 0xBA	; 186
     2f4:	ff 4f       	sbci	r31, 0xFF	; 255
     2f6:	0c 94 40 0b 	jmp	0x1680	; 0x1680 <__tablejump2__>
     2fa:	81 e0       	ldi	r24, 0x01	; 1
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	9a 83       	std	Y+2, r25	; 0x02
     300:	89 83       	std	Y+1, r24	; 0x01
     302:	af c2       	rjmp	.+1374   	; 0x862 <__LOCK_REGION_LENGTH__+0x462>
     304:	82 e0       	ldi	r24, 0x02	; 2
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	9a 83       	std	Y+2, r25	; 0x02
     30a:	89 83       	std	Y+1, r24	; 0x01
     30c:	ad c2       	rjmp	.+1370   	; 0x868 <__LOCK_REGION_LENGTH__+0x468>
     30e:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gameInPlay>
     312:	81 30       	cpi	r24, 0x01	; 1
     314:	09 f0       	breq	.+2      	; 0x318 <Ball_Tick+0x56>
     316:	a8 c2       	rjmp	.+1360   	; 0x868 <__LOCK_REGION_LENGTH__+0x468>
     318:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
     31c:	81 11       	cpse	r24, r1
     31e:	a4 c2       	rjmp	.+1352   	; 0x868 <__LOCK_REGION_LENGTH__+0x468>
     320:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     324:	81 11       	cpse	r24, r1
     326:	a0 c2       	rjmp	.+1344   	; 0x868 <__LOCK_REGION_LENGTH__+0x468>
     328:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
     32c:	88 23       	and	r24, r24
     32e:	09 f4       	brne	.+2      	; 0x332 <Ball_Tick+0x70>
     330:	5b c2       	rjmp	.+1206   	; 0x7e8 <__LOCK_REGION_LENGTH__+0x3e8>
     332:	9a c2       	rjmp	.+1332   	; 0x868 <__LOCK_REGION_LENGTH__+0x468>
     334:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gameInPlay>
     338:	81 11       	cpse	r24, r1
     33a:	9e c2       	rjmp	.+1340   	; 0x878 <__LOCK_REGION_LENGTH__+0x478>
     33c:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
     340:	81 11       	cpse	r24, r1
     342:	8c c2       	rjmp	.+1304   	; 0x85c <__LOCK_REGION_LENGTH__+0x45c>
     344:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     348:	81 11       	cpse	r24, r1
     34a:	91 c2       	rjmp	.+1314   	; 0x86e <__LOCK_REGION_LENGTH__+0x46e>
     34c:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
     350:	81 30       	cpi	r24, 0x01	; 1
     352:	09 f0       	breq	.+2      	; 0x356 <Ball_Tick+0x94>
     354:	8c c2       	rjmp	.+1304   	; 0x86e <__LOCK_REGION_LENGTH__+0x46e>
     356:	82 e0       	ldi	r24, 0x02	; 2
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	9a 83       	std	Y+2, r25	; 0x02
     35c:	89 83       	std	Y+1, r24	; 0x01
     35e:	84 c2       	rjmp	.+1288   	; 0x868 <__LOCK_REGION_LENGTH__+0x468>
     360:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
     364:	81 11       	cpse	r24, r1
     366:	7a c2       	rjmp	.+1268   	; 0x85c <__LOCK_REGION_LENGTH__+0x45c>
     368:	82 e0       	ldi	r24, 0x02	; 2
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	9a 83       	std	Y+2, r25	; 0x02
     36e:	89 83       	std	Y+1, r24	; 0x01
     370:	7b c2       	rjmp	.+1270   	; 0x868 <__LOCK_REGION_LENGTH__+0x468>
     372:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gameInPlay>
     376:	81 30       	cpi	r24, 0x01	; 1
     378:	99 f4       	brne	.+38     	; 0x3a0 <Ball_Tick+0xde>
     37a:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
     37e:	81 11       	cpse	r24, r1
     380:	0f c0       	rjmp	.+30     	; 0x3a0 <Ball_Tick+0xde>
     382:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     386:	81 11       	cpse	r24, r1
     388:	0b c0       	rjmp	.+22     	; 0x3a0 <Ball_Tick+0xde>
     38a:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
     38e:	81 11       	cpse	r24, r1
     390:	07 c0       	rjmp	.+14     	; 0x3a0 <Ball_Tick+0xde>
     392:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <PREVIOUS_STATE.2036>
     396:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <PREVIOUS_STATE.2036+0x1>
     39a:	9a 83       	std	Y+2, r25	; 0x02
     39c:	89 83       	std	Y+1, r24	; 0x01
     39e:	ff c1       	rjmp	.+1022   	; 0x79e <__LOCK_REGION_LENGTH__+0x39e>
     3a0:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <gameReset>
     3a4:	81 30       	cpi	r24, 0x01	; 1
     3a6:	09 f0       	breq	.+2      	; 0x3aa <Ball_Tick+0xe8>
     3a8:	59 c2       	rjmp	.+1202   	; 0x85c <__LOCK_REGION_LENGTH__+0x45c>
     3aa:	81 e0       	ldi	r24, 0x01	; 1
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	9a 83       	std	Y+2, r25	; 0x02
     3b0:	89 83       	std	Y+1, r24	; 0x01
     3b2:	57 c2       	rjmp	.+1198   	; 0x862 <__LOCK_REGION_LENGTH__+0x462>
     3b4:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gameInPlay>
     3b8:	81 11       	cpse	r24, r1
     3ba:	17 c0       	rjmp	.+46     	; 0x3ea <Ball_Tick+0x128>
     3bc:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
     3c0:	81 30       	cpi	r24, 0x01	; 1
     3c2:	99 f4       	brne	.+38     	; 0x3ea <Ball_Tick+0x128>
     3c4:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     3c8:	81 11       	cpse	r24, r1
     3ca:	0f c0       	rjmp	.+30     	; 0x3ea <Ball_Tick+0x128>
     3cc:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
     3d0:	81 11       	cpse	r24, r1
     3d2:	0b c0       	rjmp	.+22     	; 0x3ea <Ball_Tick+0x128>
     3d4:	87 e0       	ldi	r24, 0x07	; 7
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <PREVIOUS_STATE.2036+0x1>
     3dc:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <PREVIOUS_STATE.2036>
     3e0:	84 e0       	ldi	r24, 0x04	; 4
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	9a 83       	std	Y+2, r25	; 0x02
     3e6:	89 83       	std	Y+1, r24	; 0x01
     3e8:	39 c2       	rjmp	.+1138   	; 0x85c <__LOCK_REGION_LENGTH__+0x45c>
     3ea:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <gameReset>
     3ee:	81 30       	cpi	r24, 0x01	; 1
     3f0:	29 f4       	brne	.+10     	; 0x3fc <Ball_Tick+0x13a>
     3f2:	81 e0       	ldi	r24, 0x01	; 1
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	9a 83       	std	Y+2, r25	; 0x02
     3f8:	89 83       	std	Y+1, r24	; 0x01
     3fa:	20 c0       	rjmp	.+64     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     3fc:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <ball_column.2035>
     400:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <LEFT_WALL>
     404:	98 13       	cpse	r25, r24
     406:	10 c0       	rjmp	.+32     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     408:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <ball_row.2034>
     40c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <CEILING>
     410:	98 13       	cpse	r25, r24
     412:	05 c0       	rjmp	.+10     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     414:	89 e0       	ldi	r24, 0x09	; 9
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	9a 83       	std	Y+2, r25	; 0x02
     41a:	89 83       	std	Y+1, r24	; 0x01
     41c:	0f c0       	rjmp	.+30     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     41e:	88 e0       	ldi	r24, 0x08	; 8
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	9a 83       	std	Y+2, r25	; 0x02
     424:	89 83       	std	Y+1, r24	; 0x01
     426:	0a c0       	rjmp	.+20     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     428:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <ball_row.2034>
     42c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <CEILING>
     430:	98 13       	cpse	r25, r24
     432:	04 c0       	rjmp	.+8      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     434:	89 e0       	ldi	r24, 0x09	; 9
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	9a 83       	std	Y+2, r25	; 0x02
     43a:	89 83       	std	Y+1, r24	; 0x01
     43c:	10 91 02 01 	lds	r17, 0x0102	; 0x800102 <ball_row.2034>
     440:	41 2f       	mov	r20, r17
     442:	46 95       	lsr	r20
     444:	00 91 03 01 	lds	r16, 0x0103	; 0x800103 <ball_column.2035>
     448:	60 2f       	mov	r22, r16
     44a:	70 e0       	ldi	r23, 0x00	; 0
     44c:	60 95       	com	r22
     44e:	70 95       	com	r23
     450:	a4 e2       	ldi	r26, 0x24	; 36
     452:	b2 e0       	ldi	r27, 0x02	; 2
     454:	e6 e3       	ldi	r30, 0x36	; 54
     456:	f2 e0       	ldi	r31, 0x02	; 2
     458:	22 e0       	ldi	r18, 0x02	; 2
     45a:	30 e0       	ldi	r19, 0x00	; 0
     45c:	9d 91       	ld	r25, X+
     45e:	94 23       	and	r25, r20
     460:	b1 f0       	breq	.+44     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     462:	80 81       	ld	r24, Z
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	86 23       	and	r24, r22
     468:	97 23       	and	r25, r23
     46a:	89 2b       	or	r24, r25
     46c:	81 f4       	brne	.+32     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     46e:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <LEFT_WALL>
     472:	08 13       	cpse	r16, r24
     474:	05 c0       	rjmp	.+10     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
     476:	8a e0       	ldi	r24, 0x0A	; 10
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	9a 83       	std	Y+2, r25	; 0x02
     47c:	89 83       	std	Y+1, r24	; 0x01
     47e:	04 c0       	rjmp	.+8      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     480:	89 e0       	ldi	r24, 0x09	; 9
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	9a 83       	std	Y+2, r25	; 0x02
     486:	89 83       	std	Y+1, r24	; 0x01
     488:	c9 01       	movw	r24, r18
     48a:	50 de       	rcall	.-864    	; 0x12c <turn_off_LED.2039>
     48c:	88 c1       	rjmp	.+784    	; 0x79e <__LOCK_REGION_LENGTH__+0x39e>
     48e:	2f 5f       	subi	r18, 0xFF	; 255
     490:	3f 4f       	sbci	r19, 0xFF	; 255
     492:	31 96       	adiw	r30, 0x01	; 1
     494:	22 31       	cpi	r18, 0x12	; 18
     496:	31 05       	cpc	r19, r1
     498:	09 f7       	brne	.-62     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
     49a:	30 91 14 01 	lds	r19, 0x0114	; 0x800114 <CEILING>
     49e:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <LEFT_WALL>
     4a2:	c9 80       	ldd	r12, Y+1	; 0x01
     4a4:	da 80       	ldd	r13, Y+2	; 0x02
     4a6:	66 0f       	add	r22, r22
     4a8:	77 1f       	adc	r23, r23
     4aa:	e2 e2       	ldi	r30, 0x22	; 34
     4ac:	f2 e0       	ldi	r31, 0x02	; 2
     4ae:	a4 e3       	ldi	r26, 0x34	; 52
     4b0:	b2 e0       	ldi	r27, 0x02	; 2
     4b2:	82 e0       	ldi	r24, 0x02	; 2
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	68 94       	set
     4b8:	aa 24       	eor	r10, r10
     4ba:	a3 f8       	bld	r10, 3
     4bc:	b1 2c       	mov	r11, r1
     4be:	0f 2e       	mov	r0, r31
     4c0:	fa e0       	ldi	r31, 0x0A	; 10
     4c2:	8f 2e       	mov	r8, r31
     4c4:	f0 2d       	mov	r31, r0
     4c6:	91 2c       	mov	r9, r1
     4c8:	13 13       	cpse	r17, r19
     4ca:	03 c0       	rjmp	.+6      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
     4cc:	05 13       	cpse	r16, r21
     4ce:	03 c0       	rjmp	.+6      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
     4d0:	13 c0       	rjmp	.+38     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     4d2:	05 17       	cp	r16, r21
     4d4:	a1 f0       	breq	.+40     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
     4d6:	22 81       	ldd	r18, Z+2	; 0x02
     4d8:	24 23       	and	r18, r20
     4da:	99 f0       	breq	.+38     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
     4dc:	12 96       	adiw	r26, 0x02	; 2
     4de:	ec 90       	ld	r14, X
     4e0:	12 97       	sbiw	r26, 0x02	; 2
     4e2:	f1 2c       	mov	r15, r1
     4e4:	e6 22       	and	r14, r22
     4e6:	f7 22       	and	r15, r23
     4e8:	ef 28       	or	r14, r15
     4ea:	59 f4       	brne	.+22     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
     4ec:	2a e0       	ldi	r18, 0x0A	; 10
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	3a 83       	std	Y+2, r19	; 0x02
     4f2:	29 83       	std	Y+1, r18	; 0x01
     4f4:	1b de       	rcall	.-970    	; 0x12c <turn_off_LED.2039>
     4f6:	53 c1       	rjmp	.+678    	; 0x79e <__LOCK_REGION_LENGTH__+0x39e>
     4f8:	c8 2c       	mov	r12, r8
     4fa:	d9 2c       	mov	r13, r9
     4fc:	02 c0       	rjmp	.+4      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
     4fe:	ca 2c       	mov	r12, r10
     500:	db 2c       	mov	r13, r11
     502:	01 96       	adiw	r24, 0x01	; 1
     504:	31 96       	adiw	r30, 0x01	; 1
     506:	11 96       	adiw	r26, 0x01	; 1
     508:	82 31       	cpi	r24, 0x12	; 18
     50a:	91 05       	cpc	r25, r1
     50c:	e9 f6       	brne	.-70     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
     50e:	c9 82       	std	Y+1, r12	; 0x01
     510:	da 82       	std	Y+2, r13	; 0x02
     512:	45 c1       	rjmp	.+650    	; 0x79e <__LOCK_REGION_LENGTH__+0x39e>
     514:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gameInPlay>
     518:	81 11       	cpse	r24, r1
     51a:	17 c0       	rjmp	.+46     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
     51c:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
     520:	81 30       	cpi	r24, 0x01	; 1
     522:	99 f4       	brne	.+38     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
     524:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     528:	81 11       	cpse	r24, r1
     52a:	0f c0       	rjmp	.+30     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
     52c:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
     530:	81 11       	cpse	r24, r1
     532:	0b c0       	rjmp	.+22     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
     534:	88 e0       	ldi	r24, 0x08	; 8
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <PREVIOUS_STATE.2036+0x1>
     53c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <PREVIOUS_STATE.2036>
     540:	84 e0       	ldi	r24, 0x04	; 4
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	9a 83       	std	Y+2, r25	; 0x02
     546:	89 83       	std	Y+1, r24	; 0x01
     548:	89 c1       	rjmp	.+786    	; 0x85c <__LOCK_REGION_LENGTH__+0x45c>
     54a:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <gameReset>
     54e:	81 30       	cpi	r24, 0x01	; 1
     550:	29 f4       	brne	.+10     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
     552:	81 e0       	ldi	r24, 0x01	; 1
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	9a 83       	std	Y+2, r25	; 0x02
     558:	89 83       	std	Y+1, r24	; 0x01
     55a:	20 c0       	rjmp	.+64     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
     55c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <ball_column.2035>
     560:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <RIGHT_WALL>
     564:	98 13       	cpse	r25, r24
     566:	10 c0       	rjmp	.+32     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
     568:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <ball_row.2034>
     56c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <CEILING>
     570:	98 13       	cpse	r25, r24
     572:	05 c0       	rjmp	.+10     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
     574:	89 e0       	ldi	r24, 0x09	; 9
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	9a 83       	std	Y+2, r25	; 0x02
     57a:	89 83       	std	Y+1, r24	; 0x01
     57c:	0f c0       	rjmp	.+30     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
     57e:	87 e0       	ldi	r24, 0x07	; 7
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	9a 83       	std	Y+2, r25	; 0x02
     584:	89 83       	std	Y+1, r24	; 0x01
     586:	0a c0       	rjmp	.+20     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
     588:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <ball_row.2034>
     58c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <CEILING>
     590:	98 13       	cpse	r25, r24
     592:	04 c0       	rjmp	.+8      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
     594:	8a e0       	ldi	r24, 0x0A	; 10
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	9a 83       	std	Y+2, r25	; 0x02
     59a:	89 83       	std	Y+1, r24	; 0x01
     59c:	10 91 02 01 	lds	r17, 0x0102	; 0x800102 <ball_row.2034>
     5a0:	41 2f       	mov	r20, r17
     5a2:	46 95       	lsr	r20
     5a4:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <ball_column.2035>
     5a8:	65 2f       	mov	r22, r21
     5aa:	70 e0       	ldi	r23, 0x00	; 0
     5ac:	60 95       	com	r22
     5ae:	70 95       	com	r23
     5b0:	a4 e2       	ldi	r26, 0x24	; 36
     5b2:	b2 e0       	ldi	r27, 0x02	; 2
     5b4:	e6 e3       	ldi	r30, 0x36	; 54
     5b6:	f2 e0       	ldi	r31, 0x02	; 2
     5b8:	22 e0       	ldi	r18, 0x02	; 2
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	9d 91       	ld	r25, X+
     5be:	94 23       	and	r25, r20
     5c0:	b1 f0       	breq	.+44     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
     5c2:	80 81       	ld	r24, Z
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	86 23       	and	r24, r22
     5c8:	97 23       	and	r25, r23
     5ca:	89 2b       	or	r24, r25
     5cc:	81 f4       	brne	.+32     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
     5ce:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <RIGHT_WALL>
     5d2:	58 13       	cpse	r21, r24
     5d4:	05 c0       	rjmp	.+10     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
     5d6:	89 e0       	ldi	r24, 0x09	; 9
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	9a 83       	std	Y+2, r25	; 0x02
     5dc:	89 83       	std	Y+1, r24	; 0x01
     5de:	04 c0       	rjmp	.+8      	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
     5e0:	8a e0       	ldi	r24, 0x0A	; 10
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	9a 83       	std	Y+2, r25	; 0x02
     5e6:	89 83       	std	Y+1, r24	; 0x01
     5e8:	c9 01       	movw	r24, r18
     5ea:	a0 dd       	rcall	.-1216   	; 0x12c <turn_off_LED.2039>
     5ec:	d8 c0       	rjmp	.+432    	; 0x79e <__LOCK_REGION_LENGTH__+0x39e>
     5ee:	2f 5f       	subi	r18, 0xFF	; 255
     5f0:	3f 4f       	sbci	r19, 0xFF	; 255
     5f2:	31 96       	adiw	r30, 0x01	; 1
     5f4:	22 31       	cpi	r18, 0x12	; 18
     5f6:	31 05       	cpc	r19, r1
     5f8:	09 f7       	brne	.-62     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
     5fa:	30 91 14 01 	lds	r19, 0x0114	; 0x800114 <CEILING>
     5fe:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <RIGHT_WALL>
     602:	09 81       	ldd	r16, Y+1	; 0x01
     604:	7a 81       	ldd	r23, Y+2	; 0x02
     606:	85 2f       	mov	r24, r21
     608:	86 95       	lsr	r24
     60a:	80 68       	ori	r24, 0x80	; 128
     60c:	e8 2e       	mov	r14, r24
     60e:	f1 2c       	mov	r15, r1
     610:	e0 94       	com	r14
     612:	f0 94       	com	r15
     614:	e2 e2       	ldi	r30, 0x22	; 34
     616:	f2 e0       	ldi	r31, 0x02	; 2
     618:	a4 e3       	ldi	r26, 0x34	; 52
     61a:	b2 e0       	ldi	r27, 0x02	; 2
     61c:	82 e0       	ldi	r24, 0x02	; 2
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	0f 2e       	mov	r0, r31
     622:	f7 e0       	ldi	r31, 0x07	; 7
     624:	af 2e       	mov	r10, r31
     626:	f0 2d       	mov	r31, r0
     628:	b1 2c       	mov	r11, r1
     62a:	0f 2e       	mov	r0, r31
     62c:	f9 e0       	ldi	r31, 0x09	; 9
     62e:	8f 2e       	mov	r8, r31
     630:	f0 2d       	mov	r31, r0
     632:	91 2c       	mov	r9, r1
     634:	13 13       	cpse	r17, r19
     636:	03 c0       	rjmp	.+6      	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
     638:	56 13       	cpse	r21, r22
     63a:	03 c0       	rjmp	.+6      	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
     63c:	14 c0       	rjmp	.+40     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
     63e:	56 17       	cp	r21, r22
     640:	a9 f0       	breq	.+42     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
     642:	22 81       	ldd	r18, Z+2	; 0x02
     644:	24 23       	and	r18, r20
     646:	a1 f0       	breq	.+40     	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
     648:	12 96       	adiw	r26, 0x02	; 2
     64a:	2c 91       	ld	r18, X
     64c:	12 97       	sbiw	r26, 0x02	; 2
     64e:	c2 2e       	mov	r12, r18
     650:	d1 2c       	mov	r13, r1
     652:	ce 20       	and	r12, r14
     654:	df 20       	and	r13, r15
     656:	cd 28       	or	r12, r13
     658:	59 f4       	brne	.+22     	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
     65a:	29 e0       	ldi	r18, 0x09	; 9
     65c:	30 e0       	ldi	r19, 0x00	; 0
     65e:	3a 83       	std	Y+2, r19	; 0x02
     660:	29 83       	std	Y+1, r18	; 0x01
     662:	64 dd       	rcall	.-1336   	; 0x12c <turn_off_LED.2039>
     664:	9c c0       	rjmp	.+312    	; 0x79e <__LOCK_REGION_LENGTH__+0x39e>
     666:	08 2d       	mov	r16, r8
     668:	79 2d       	mov	r23, r9
     66a:	02 c0       	rjmp	.+4      	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
     66c:	0a 2d       	mov	r16, r10
     66e:	7b 2d       	mov	r23, r11
     670:	01 96       	adiw	r24, 0x01	; 1
     672:	31 96       	adiw	r30, 0x01	; 1
     674:	11 96       	adiw	r26, 0x01	; 1
     676:	82 31       	cpi	r24, 0x12	; 18
     678:	91 05       	cpc	r25, r1
     67a:	e1 f6       	brne	.-72     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
     67c:	09 83       	std	Y+1, r16	; 0x01
     67e:	7a 83       	std	Y+2, r23	; 0x02
     680:	8e c0       	rjmp	.+284    	; 0x79e <__LOCK_REGION_LENGTH__+0x39e>
     682:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gameInPlay>
     686:	81 11       	cpse	r24, r1
     688:	17 c0       	rjmp	.+46     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
     68a:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
     68e:	81 30       	cpi	r24, 0x01	; 1
     690:	99 f4       	brne	.+38     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
     692:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     696:	81 11       	cpse	r24, r1
     698:	0f c0       	rjmp	.+30     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
     69a:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
     69e:	81 11       	cpse	r24, r1
     6a0:	0b c0       	rjmp	.+22     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
     6a2:	89 e0       	ldi	r24, 0x09	; 9
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <PREVIOUS_STATE.2036+0x1>
     6aa:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <PREVIOUS_STATE.2036>
     6ae:	84 e0       	ldi	r24, 0x04	; 4
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	9a 83       	std	Y+2, r25	; 0x02
     6b4:	89 83       	std	Y+1, r24	; 0x01
     6b6:	d2 c0       	rjmp	.+420    	; 0x85c <__LOCK_REGION_LENGTH__+0x45c>
     6b8:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <ball_row.2034>
     6bc:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <FLOOR>
     6c0:	98 17       	cp	r25, r24
     6c2:	59 f0       	breq	.+22     	; 0x6da <__LOCK_REGION_LENGTH__+0x2da>
     6c4:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <ball_column.2035>
     6c8:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <LEFT_WALL>
     6cc:	98 13       	cpse	r25, r24
     6ce:	14 c0       	rjmp	.+40     	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
     6d0:	8a e0       	ldi	r24, 0x0A	; 10
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	9a 83       	std	Y+2, r25	; 0x02
     6d6:	89 83       	std	Y+1, r24	; 0x01
     6d8:	0f c0       	rjmp	.+30     	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
     6da:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <ball_column.2035>
     6de:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <LEFT_WALL>
     6e2:	98 13       	cpse	r25, r24
     6e4:	05 c0       	rjmp	.+10     	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
     6e6:	88 e0       	ldi	r24, 0x08	; 8
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	9a 83       	std	Y+2, r25	; 0x02
     6ec:	89 83       	std	Y+1, r24	; 0x01
     6ee:	04 c0       	rjmp	.+8      	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
     6f0:	87 e0       	ldi	r24, 0x07	; 7
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	9a 83       	std	Y+2, r25	; 0x02
     6f6:	89 83       	std	Y+1, r24	; 0x01
     6f8:	ce 01       	movw	r24, r28
     6fa:	01 96       	adiw	r24, 0x01	; 1
     6fc:	1c 01       	movw	r2, r24
     6fe:	27 dd       	rcall	.-1458   	; 0x14e <paddle_collision_detection.2041>
     700:	4e c0       	rjmp	.+156    	; 0x79e <__LOCK_REGION_LENGTH__+0x39e>
     702:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gameInPlay>
     706:	81 11       	cpse	r24, r1
     708:	17 c0       	rjmp	.+46     	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
     70a:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
     70e:	81 30       	cpi	r24, 0x01	; 1
     710:	99 f4       	brne	.+38     	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
     712:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     716:	81 11       	cpse	r24, r1
     718:	0f c0       	rjmp	.+30     	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
     71a:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
     71e:	81 11       	cpse	r24, r1
     720:	0b c0       	rjmp	.+22     	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
     722:	8a e0       	ldi	r24, 0x0A	; 10
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <PREVIOUS_STATE.2036+0x1>
     72a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <PREVIOUS_STATE.2036>
     72e:	84 e0       	ldi	r24, 0x04	; 4
     730:	90 e0       	ldi	r25, 0x00	; 0
     732:	9a 83       	std	Y+2, r25	; 0x02
     734:	89 83       	std	Y+1, r24	; 0x01
     736:	92 c0       	rjmp	.+292    	; 0x85c <__LOCK_REGION_LENGTH__+0x45c>
     738:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <gameReset>
     73c:	81 30       	cpi	r24, 0x01	; 1
     73e:	29 f4       	brne	.+10     	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
     740:	81 e0       	ldi	r24, 0x01	; 1
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	9a 83       	std	Y+2, r25	; 0x02
     746:	89 83       	std	Y+1, r24	; 0x01
     748:	20 c0       	rjmp	.+64     	; 0x78a <__LOCK_REGION_LENGTH__+0x38a>
     74a:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <ball_row.2034>
     74e:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <FLOOR>
     752:	98 13       	cpse	r25, r24
     754:	10 c0       	rjmp	.+32     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     756:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <ball_column.2035>
     75a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <RIGHT_WALL>
     75e:	98 13       	cpse	r25, r24
     760:	05 c0       	rjmp	.+10     	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
     762:	87 e0       	ldi	r24, 0x07	; 7
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	9a 83       	std	Y+2, r25	; 0x02
     768:	89 83       	std	Y+1, r24	; 0x01
     76a:	0f c0       	rjmp	.+30     	; 0x78a <__LOCK_REGION_LENGTH__+0x38a>
     76c:	88 e0       	ldi	r24, 0x08	; 8
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	9a 83       	std	Y+2, r25	; 0x02
     772:	89 83       	std	Y+1, r24	; 0x01
     774:	0a c0       	rjmp	.+20     	; 0x78a <__LOCK_REGION_LENGTH__+0x38a>
     776:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <ball_column.2035>
     77a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <RIGHT_WALL>
     77e:	98 13       	cpse	r25, r24
     780:	04 c0       	rjmp	.+8      	; 0x78a <__LOCK_REGION_LENGTH__+0x38a>
     782:	89 e0       	ldi	r24, 0x09	; 9
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	9a 83       	std	Y+2, r25	; 0x02
     788:	89 83       	std	Y+1, r24	; 0x01
     78a:	ce 01       	movw	r24, r28
     78c:	01 96       	adiw	r24, 0x01	; 1
     78e:	1c 01       	movw	r2, r24
     790:	de dc       	rcall	.-1604   	; 0x14e <paddle_collision_detection.2041>
     792:	05 c0       	rjmp	.+10     	; 0x79e <__LOCK_REGION_LENGTH__+0x39e>
     794:	81 e0       	ldi	r24, 0x01	; 1
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	9a 83       	std	Y+2, r25	; 0x02
     79a:	89 83       	std	Y+1, r24	; 0x01
     79c:	62 c0       	rjmp	.+196    	; 0x862 <__LOCK_REGION_LENGTH__+0x462>
     79e:	89 81       	ldd	r24, Y+1	; 0x01
     7a0:	9a 81       	ldd	r25, Y+2	; 0x02
     7a2:	fc 01       	movw	r30, r24
     7a4:	31 97       	sbiw	r30, 0x01	; 1
     7a6:	ea 30       	cpi	r30, 0x0A	; 10
     7a8:	f1 05       	cpc	r31, r1
     7aa:	08 f0       	brcs	.+2      	; 0x7ae <__LOCK_REGION_LENGTH__+0x3ae>
     7ac:	4e c0       	rjmp	.+156    	; 0x84a <__LOCK_REGION_LENGTH__+0x44a>
     7ae:	ef 5a       	subi	r30, 0xAF	; 175
     7b0:	ff 4f       	sbci	r31, 0xFF	; 255
     7b2:	66 c7       	rjmp	.+3788   	; 0x1680 <__tablejump2__>
     7b4:	20 e4       	ldi	r18, 0x40	; 64
     7b6:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <ball_row.2034>
     7ba:	2b ef       	ldi	r18, 0xFB	; 251
     7bc:	20 93 03 01 	sts	0x0103, r18	; 0x800103 <ball_column.2035>
     7c0:	44 c0       	rjmp	.+136    	; 0x84a <__LOCK_REGION_LENGTH__+0x44a>
     7c2:	20 e4       	ldi	r18, 0x40	; 64
     7c4:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <ball_row.2034>
     7c8:	2b ef       	ldi	r18, 0xFB	; 251
     7ca:	20 93 03 01 	sts	0x0103, r18	; 0x800103 <ball_column.2035>
     7ce:	3d c0       	rjmp	.+122    	; 0x84a <__LOCK_REGION_LENGTH__+0x44a>
     7d0:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <ball_row.2034>
     7d4:	26 95       	lsr	r18
     7d6:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <ball_row.2034>
     7da:	37 c0       	rjmp	.+110    	; 0x84a <__LOCK_REGION_LENGTH__+0x44a>
     7dc:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <ball_row.2034>
     7e0:	22 0f       	add	r18, r18
     7e2:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <ball_row.2034>
     7e6:	31 c0       	rjmp	.+98     	; 0x84a <__LOCK_REGION_LENGTH__+0x44a>
     7e8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <ball_row.2034>
     7ec:	86 95       	lsr	r24
     7ee:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <ball_row.2034>
     7f2:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <ball_column.2035>
     7f6:	88 0f       	add	r24, r24
     7f8:	81 60       	ori	r24, 0x01	; 1
     7fa:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <ball_column.2035>
     7fe:	87 e0       	ldi	r24, 0x07	; 7
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	23 c0       	rjmp	.+70     	; 0x84a <__LOCK_REGION_LENGTH__+0x44a>
     804:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <ball_row.2034>
     808:	22 0f       	add	r18, r18
     80a:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <ball_row.2034>
     80e:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <ball_column.2035>
     812:	22 0f       	add	r18, r18
     814:	21 60       	ori	r18, 0x01	; 1
     816:	20 93 03 01 	sts	0x0103, r18	; 0x800103 <ball_column.2035>
     81a:	17 c0       	rjmp	.+46     	; 0x84a <__LOCK_REGION_LENGTH__+0x44a>
     81c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <ball_row.2034>
     820:	26 95       	lsr	r18
     822:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <ball_row.2034>
     826:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <ball_column.2035>
     82a:	26 95       	lsr	r18
     82c:	20 68       	ori	r18, 0x80	; 128
     82e:	20 93 03 01 	sts	0x0103, r18	; 0x800103 <ball_column.2035>
     832:	0b c0       	rjmp	.+22     	; 0x84a <__LOCK_REGION_LENGTH__+0x44a>
     834:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <ball_row.2034>
     838:	22 0f       	add	r18, r18
     83a:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <ball_row.2034>
     83e:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <ball_column.2035>
     842:	26 95       	lsr	r18
     844:	20 68       	ori	r18, 0x80	; 128
     846:	20 93 03 01 	sts	0x0103, r18	; 0x800103 <ball_column.2035>
     84a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <ball_row.2034>
     84e:	20 93 23 02 	sts	0x0223, r18	; 0x800223 <DISPLAY_PORTA+0x1>
     852:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <ball_column.2035>
     856:	20 93 35 02 	sts	0x0235, r18	; 0x800235 <DISPLAY_PORTB+0x1>
     85a:	11 c0       	rjmp	.+34     	; 0x87e <__LOCK_REGION_LENGTH__+0x47e>
     85c:	89 81       	ldd	r24, Y+1	; 0x01
     85e:	9a 81       	ldd	r25, Y+2	; 0x02
     860:	f4 cf       	rjmp	.-24     	; 0x84a <__LOCK_REGION_LENGTH__+0x44a>
     862:	89 81       	ldd	r24, Y+1	; 0x01
     864:	9a 81       	ldd	r25, Y+2	; 0x02
     866:	a6 cf       	rjmp	.-180    	; 0x7b4 <__LOCK_REGION_LENGTH__+0x3b4>
     868:	89 81       	ldd	r24, Y+1	; 0x01
     86a:	9a 81       	ldd	r25, Y+2	; 0x02
     86c:	aa cf       	rjmp	.-172    	; 0x7c2 <__LOCK_REGION_LENGTH__+0x3c2>
     86e:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     872:	81 30       	cpi	r24, 0x01	; 1
     874:	99 f7       	brne	.-26     	; 0x85c <__LOCK_REGION_LENGTH__+0x45c>
     876:	74 cd       	rjmp	.-1304   	; 0x360 <Ball_Tick+0x9e>
     878:	89 81       	ldd	r24, Y+1	; 0x01
     87a:	9a 81       	ldd	r25, Y+2	; 0x02
     87c:	e6 cf       	rjmp	.-52     	; 0x84a <__LOCK_REGION_LENGTH__+0x44a>
     87e:	0f 90       	pop	r0
     880:	0f 90       	pop	r0
     882:	df 91       	pop	r29
     884:	cf 91       	pop	r28
     886:	1f 91       	pop	r17
     888:	0f 91       	pop	r16
     88a:	ff 90       	pop	r15
     88c:	ef 90       	pop	r14
     88e:	df 90       	pop	r13
     890:	cf 90       	pop	r12
     892:	bf 90       	pop	r11
     894:	af 90       	pop	r10
     896:	9f 90       	pop	r9
     898:	8f 90       	pop	r8
     89a:	3f 90       	pop	r3
     89c:	2f 90       	pop	r2
     89e:	08 95       	ret

000008a0 <Brick_Tick>:
     8a0:	8f 92       	push	r8
     8a2:	9f 92       	push	r9
     8a4:	bf 92       	push	r11
     8a6:	cf 92       	push	r12
     8a8:	df 92       	push	r13
     8aa:	ef 92       	push	r14
     8ac:	ff 92       	push	r15
     8ae:	0f 93       	push	r16
     8b0:	1f 93       	push	r17
     8b2:	cf 93       	push	r28
     8b4:	df 93       	push	r29
     8b6:	82 30       	cpi	r24, 0x02	; 2
     8b8:	91 05       	cpc	r25, r1
     8ba:	01 f1       	breq	.+64     	; 0x8fc <Brick_Tick+0x5c>
     8bc:	83 30       	cpi	r24, 0x03	; 3
     8be:	91 05       	cpc	r25, r1
     8c0:	09 f4       	brne	.+2      	; 0x8c4 <Brick_Tick+0x24>
     8c2:	79 c0       	rjmp	.+242    	; 0x9b6 <Brick_Tick+0x116>
     8c4:	01 97       	sbiw	r24, 0x01	; 1
     8c6:	09 f4       	brne	.+2      	; 0x8ca <Brick_Tick+0x2a>
     8c8:	76 c0       	rjmp	.+236    	; 0x9b6 <Brick_Tick+0x116>
     8ca:	a4 e2       	ldi	r26, 0x24	; 36
     8cc:	b2 e0       	ldi	r27, 0x02	; 2
     8ce:	e6 e3       	ldi	r30, 0x36	; 54
     8d0:	f2 e0       	ldi	r31, 0x02	; 2
     8d2:	20 ef       	ldi	r18, 0xF0	; 240
     8d4:	3f ef       	ldi	r19, 0xFF	; 255
     8d6:	88 ef       	ldi	r24, 0xF8	; 248
     8d8:	9f ef       	ldi	r25, 0xFF	; 255
     8da:	68 94       	set
     8dc:	bb 24       	eor	r11, r11
     8de:	b2 f8       	bld	r11, 2
     8e0:	68 94       	set
     8e2:	ee 24       	eor	r14, r14
     8e4:	e4 f8       	bld	r14, 4
     8e6:	f1 2c       	mov	r15, r1
     8e8:	0f ef       	ldi	r16, 0xFF	; 255
     8ea:	10 e0       	ldi	r17, 0x00	; 0
     8ec:	cf e7       	ldi	r28, 0x7F	; 127
     8ee:	d0 e0       	ldi	r29, 0x00	; 0
     8f0:	68 94       	set
     8f2:	cc 24       	eor	r12, r12
     8f4:	c1 f8       	bld	r12, 1
     8f6:	dd 24       	eor	r13, r13
     8f8:	d3 94       	inc	r13
     8fa:	06 c0       	rjmp	.+12     	; 0x908 <Brick_Tick+0x68>
     8fc:	20 91 cf 01 	lds	r18, 0x01CF	; 0x8001cf <gameReset>
     900:	21 30       	cpi	r18, 0x01	; 1
     902:	09 f0       	breq	.+2      	; 0x906 <Brick_Tick+0x66>
     904:	5a c0       	rjmp	.+180    	; 0x9ba <Brick_Tick+0x11a>
     906:	e1 cf       	rjmp	.-62     	; 0x8ca <Brick_Tick+0x2a>
     908:	ac 01       	movw	r20, r24
     90a:	46 5f       	subi	r20, 0xF6	; 246
     90c:	5f 4f       	sbci	r21, 0xFF	; 255
     90e:	4a 30       	cpi	r20, 0x0A	; 10
     910:	51 05       	cpc	r21, r1
     912:	bc f4       	brge	.+46     	; 0x942 <Brick_Tick+0xa2>
     914:	dc 92       	st	X, r13
     916:	42 50       	subi	r20, 0x02	; 2
     918:	51 09       	sbc	r21, r1
     91a:	be 01       	movw	r22, r28
     91c:	02 c0       	rjmp	.+4      	; 0x922 <Brick_Tick+0x82>
     91e:	75 95       	asr	r23
     920:	67 95       	ror	r22
     922:	4a 95       	dec	r20
     924:	e2 f7       	brpl	.-8      	; 0x91e <Brick_Tick+0x7e>
     926:	44 27       	eor	r20, r20
     928:	55 27       	eor	r21, r21
     92a:	48 1b       	sub	r20, r24
     92c:	59 0b       	sbc	r21, r25
     92e:	48 01       	movw	r8, r16
     930:	02 c0       	rjmp	.+4      	; 0x936 <Brick_Tick+0x96>
     932:	88 0c       	add	r8, r8
     934:	99 1c       	adc	r9, r9
     936:	4a 95       	dec	r20
     938:	e2 f7       	brpl	.-8      	; 0x932 <Brick_Tick+0x92>
     93a:	a4 01       	movw	r20, r8
     93c:	46 2b       	or	r20, r22
     93e:	40 83       	st	Z, r20
     940:	2e c0       	rjmp	.+92     	; 0x99e <Brick_Tick+0xfe>
     942:	88 30       	cpi	r24, 0x08	; 8
     944:	91 05       	cpc	r25, r1
     946:	a8 f4       	brcc	.+42     	; 0x972 <Brick_Tick+0xd2>
     948:	cc 92       	st	X, r12
     94a:	44 27       	eor	r20, r20
     94c:	55 27       	eor	r21, r21
     94e:	42 1b       	sub	r20, r18
     950:	53 0b       	sbc	r21, r19
     952:	b8 01       	movw	r22, r16
     954:	02 c0       	rjmp	.+4      	; 0x95a <Brick_Tick+0xba>
     956:	66 0f       	add	r22, r22
     958:	77 1f       	adc	r23, r23
     95a:	4a 95       	dec	r20
     95c:	e2 f7       	brpl	.-8      	; 0x956 <Brick_Tick+0xb6>
     95e:	ae 01       	movw	r20, r28
     960:	08 2e       	mov	r0, r24
     962:	02 c0       	rjmp	.+4      	; 0x968 <Brick_Tick+0xc8>
     964:	55 95       	asr	r21
     966:	47 95       	ror	r20
     968:	0a 94       	dec	r0
     96a:	e2 f7       	brpl	.-8      	; 0x964 <Brick_Tick+0xc4>
     96c:	46 2b       	or	r20, r22
     96e:	40 83       	st	Z, r20
     970:	16 c0       	rjmp	.+44     	; 0x99e <Brick_Tick+0xfe>
     972:	28 30       	cpi	r18, 0x08	; 8
     974:	31 05       	cpc	r19, r1
     976:	98 f4       	brcc	.+38     	; 0x99e <Brick_Tick+0xfe>
     978:	bc 92       	st	X, r11
     97a:	a7 01       	movw	r20, r14
     97c:	48 1b       	sub	r20, r24
     97e:	59 0b       	sbc	r21, r25
     980:	b8 01       	movw	r22, r16
     982:	02 c0       	rjmp	.+4      	; 0x988 <Brick_Tick+0xe8>
     984:	66 0f       	add	r22, r22
     986:	77 1f       	adc	r23, r23
     988:	4a 95       	dec	r20
     98a:	e2 f7       	brpl	.-8      	; 0x984 <Brick_Tick+0xe4>
     98c:	ae 01       	movw	r20, r28
     98e:	02 2e       	mov	r0, r18
     990:	02 c0       	rjmp	.+4      	; 0x996 <Brick_Tick+0xf6>
     992:	55 95       	asr	r21
     994:	47 95       	ror	r20
     996:	0a 94       	dec	r0
     998:	e2 f7       	brpl	.-8      	; 0x992 <Brick_Tick+0xf2>
     99a:	46 2b       	or	r20, r22
     99c:	40 83       	st	Z, r20
     99e:	11 96       	adiw	r26, 0x01	; 1
     9a0:	31 96       	adiw	r30, 0x01	; 1
     9a2:	01 96       	adiw	r24, 0x01	; 1
     9a4:	2f 5f       	subi	r18, 0xFF	; 255
     9a6:	3f 4f       	sbci	r19, 0xFF	; 255
     9a8:	88 30       	cpi	r24, 0x08	; 8
     9aa:	91 05       	cpc	r25, r1
     9ac:	09 f0       	breq	.+2      	; 0x9b0 <Brick_Tick+0x110>
     9ae:	ac cf       	rjmp	.-168    	; 0x908 <Brick_Tick+0x68>
     9b0:	81 e0       	ldi	r24, 0x01	; 1
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	02 c0       	rjmp	.+4      	; 0x9ba <Brick_Tick+0x11a>
     9b6:	82 e0       	ldi	r24, 0x02	; 2
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	df 91       	pop	r29
     9bc:	cf 91       	pop	r28
     9be:	1f 91       	pop	r17
     9c0:	0f 91       	pop	r16
     9c2:	ff 90       	pop	r15
     9c4:	ef 90       	pop	r14
     9c6:	df 90       	pop	r13
     9c8:	cf 90       	pop	r12
     9ca:	bf 90       	pop	r11
     9cc:	9f 90       	pop	r9
     9ce:	8f 90       	pop	r8
     9d0:	08 95       	ret

000009d2 <LED_MATRIX_OUTPUT_Tick>:
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	02 97       	sbiw	r24, 0x02	; 2
     9d6:	30 f5       	brcc	.+76     	; 0xa24 <LED_MATRIX_OUTPUT_Tick+0x52>
     9d8:	e0 91 cb 01 	lds	r30, 0x01CB	; 0x8001cb <index.2125>
     9dc:	f0 91 cc 01 	lds	r31, 0x01CC	; 0x8001cc <index.2125+0x1>
     9e0:	ee 5d       	subi	r30, 0xDE	; 222
     9e2:	fd 4f       	sbci	r31, 0xFD	; 253
     9e4:	80 81       	ld	r24, Z
     9e6:	82 b9       	out	0x02, r24	; 2
     9e8:	e0 91 cb 01 	lds	r30, 0x01CB	; 0x8001cb <index.2125>
     9ec:	f0 91 cc 01 	lds	r31, 0x01CC	; 0x8001cc <index.2125+0x1>
     9f0:	ec 5c       	subi	r30, 0xCC	; 204
     9f2:	fd 4f       	sbci	r31, 0xFD	; 253
     9f4:	80 81       	ld	r24, Z
     9f6:	85 b9       	out	0x05, r24	; 5
     9f8:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <index.2125>
     9fc:	90 91 cc 01 	lds	r25, 0x01CC	; 0x8001cc <index.2125+0x1>
     a00:	81 31       	cpi	r24, 0x11	; 17
     a02:	91 05       	cpc	r25, r1
     a04:	39 f4       	brne	.+14     	; 0xa14 <LED_MATRIX_OUTPUT_Tick+0x42>
     a06:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <index.2125+0x1>
     a0a:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <index.2125>
     a0e:	82 e0       	ldi	r24, 0x02	; 2
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	08 95       	ret
     a14:	01 96       	adiw	r24, 0x01	; 1
     a16:	90 93 cc 01 	sts	0x01CC, r25	; 0x8001cc <index.2125+0x1>
     a1a:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <index.2125>
     a1e:	82 e0       	ldi	r24, 0x02	; 2
     a20:	90 e0       	ldi	r25, 0x00	; 0
     a22:	08 95       	ret
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	08 95       	ret

00000a2a <GetNESControllerButton>:
     a2a:	41 9a       	sbi	0x08, 1	; 8
     a2c:	41 98       	cbi	0x08, 1	; 8
     a2e:	40 e0       	ldi	r20, 0x00	; 0
     a30:	50 e0       	ldi	r21, 0x00	; 0
     a32:	80 e0       	ldi	r24, 0x00	; 0
     a34:	26 b1       	in	r18, 0x06	; 6
     a36:	30 e0       	ldi	r19, 0x00	; 0
     a38:	20 95       	com	r18
     a3a:	30 95       	com	r19
     a3c:	22 fb       	bst	r18, 2
     a3e:	66 27       	eor	r22, r22
     a40:	60 f9       	bld	r22, 0
     a42:	70 e0       	ldi	r23, 0x00	; 0
     a44:	9b 01       	movw	r18, r22
     a46:	04 2e       	mov	r0, r20
     a48:	02 c0       	rjmp	.+4      	; 0xa4e <GetNESControllerButton+0x24>
     a4a:	22 0f       	add	r18, r18
     a4c:	33 1f       	adc	r19, r19
     a4e:	0a 94       	dec	r0
     a50:	e2 f7       	brpl	.-8      	; 0xa4a <GetNESControllerButton+0x20>
     a52:	82 2b       	or	r24, r18
     a54:	40 9a       	sbi	0x08, 0	; 8
     a56:	40 98       	cbi	0x08, 0	; 8
     a58:	4f 5f       	subi	r20, 0xFF	; 255
     a5a:	5f 4f       	sbci	r21, 0xFF	; 255
     a5c:	48 30       	cpi	r20, 0x08	; 8
     a5e:	51 05       	cpc	r21, r1
     a60:	49 f7       	brne	.-46     	; 0xa34 <GetNESControllerButton+0xa>
     a62:	08 95       	ret

00000a64 <Paddle_Tick>:
     a64:	1f 93       	push	r17
     a66:	cf 93       	push	r28
     a68:	df 93       	push	r29
     a6a:	ec 01       	movw	r28, r24
     a6c:	de df       	rcall	.-68     	; 0xa2a <GetNESControllerButton>
     a6e:	18 2f       	mov	r17, r24
     a70:	fe 01       	movw	r30, r28
     a72:	31 97       	sbiw	r30, 0x01	; 1
     a74:	e7 30       	cpi	r30, 0x07	; 7
     a76:	f1 05       	cpc	r31, r1
     a78:	08 f0       	brcs	.+2      	; 0xa7c <Paddle_Tick+0x18>
     a7a:	77 c0       	rjmp	.+238    	; 0xb6a <Paddle_Tick+0x106>
     a7c:	e5 5a       	subi	r30, 0xA5	; 165
     a7e:	ff 4f       	sbci	r31, 0xFF	; 255
     a80:	ff c5       	rjmp	.+3070   	; 0x1680 <__tablejump2__>
     a82:	c7 e0       	ldi	r28, 0x07	; 7
     a84:	d0 e0       	ldi	r29, 0x00	; 0
     a86:	b1 c0       	rjmp	.+354    	; 0xbea <Paddle_Tick+0x186>
     a88:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gameInPlay>
     a8c:	81 30       	cpi	r24, 0x01	; 1
     a8e:	09 f0       	breq	.+2      	; 0xa92 <Paddle_Tick+0x2e>
     a90:	ac c0       	rjmp	.+344    	; 0xbea <Paddle_Tick+0x186>
     a92:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
     a96:	81 11       	cpse	r24, r1
     a98:	a8 c0       	rjmp	.+336    	; 0xbea <Paddle_Tick+0x186>
     a9a:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     a9e:	81 11       	cpse	r24, r1
     aa0:	a4 c0       	rjmp	.+328    	; 0xbea <Paddle_Tick+0x186>
     aa2:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
     aa6:	88 23       	and	r24, r24
     aa8:	09 f4       	brne	.+2      	; 0xaac <Paddle_Tick+0x48>
     aaa:	85 c0       	rjmp	.+266    	; 0xbb6 <Paddle_Tick+0x152>
     aac:	9e c0       	rjmp	.+316    	; 0xbea <Paddle_Tick+0x186>
     aae:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <NES_LEFT_DPAD>
     ab2:	18 13       	cpse	r17, r24
     ab4:	12 c0       	rjmp	.+36     	; 0xada <Paddle_Tick+0x76>
     ab6:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gameInPlay>
     aba:	81 30       	cpi	r24, 0x01	; 1
     abc:	21 f5       	brne	.+72     	; 0xb06 <Paddle_Tick+0xa2>
     abe:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
     ac2:	81 11       	cpse	r24, r1
     ac4:	3c c0       	rjmp	.+120    	; 0xb3e <Paddle_Tick+0xda>
     ac6:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     aca:	81 11       	cpse	r24, r1
     acc:	89 c0       	rjmp	.+274    	; 0xbe0 <Paddle_Tick+0x17c>
     ace:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
     ad2:	88 23       	and	r24, r24
     ad4:	09 f4       	brne	.+2      	; 0xad8 <Paddle_Tick+0x74>
     ad6:	74 c0       	rjmp	.+232    	; 0xbc0 <Paddle_Tick+0x15c>
     ad8:	83 c0       	rjmp	.+262    	; 0xbe0 <Paddle_Tick+0x17c>
     ada:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <NES_RIGHT_DPAD>
     ade:	18 13       	cpse	r17, r24
     ae0:	12 c0       	rjmp	.+36     	; 0xb06 <Paddle_Tick+0xa2>
     ae2:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gameInPlay>
     ae6:	81 30       	cpi	r24, 0x01	; 1
     ae8:	71 f4       	brne	.+28     	; 0xb06 <Paddle_Tick+0xa2>
     aea:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
     aee:	81 11       	cpse	r24, r1
     af0:	26 c0       	rjmp	.+76     	; 0xb3e <Paddle_Tick+0xda>
     af2:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     af6:	81 11       	cpse	r24, r1
     af8:	22 c0       	rjmp	.+68     	; 0xb3e <Paddle_Tick+0xda>
     afa:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
     afe:	88 23       	and	r24, r24
     b00:	09 f4       	brne	.+2      	; 0xb04 <Paddle_Tick+0xa0>
     b02:	63 c0       	rjmp	.+198    	; 0xbca <Paddle_Tick+0x166>
     b04:	1c c0       	rjmp	.+56     	; 0xb3e <Paddle_Tick+0xda>
     b06:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gameInPlay>
     b0a:	81 11       	cpse	r24, r1
     b0c:	18 c0       	rjmp	.+48     	; 0xb3e <Paddle_Tick+0xda>
     b0e:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
     b12:	81 30       	cpi	r24, 0x01	; 1
     b14:	51 f4       	brne	.+20     	; 0xb2a <Paddle_Tick+0xc6>
     b16:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     b1a:	81 11       	cpse	r24, r1
     b1c:	10 c0       	rjmp	.+32     	; 0xb3e <Paddle_Tick+0xda>
     b1e:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
     b22:	88 23       	and	r24, r24
     b24:	09 f4       	brne	.+2      	; 0xb28 <Paddle_Tick+0xc4>
     b26:	59 c0       	rjmp	.+178    	; 0xbda <Paddle_Tick+0x176>
     b28:	0a c0       	rjmp	.+20     	; 0xb3e <Paddle_Tick+0xda>
     b2a:	81 11       	cpse	r24, r1
     b2c:	08 c0       	rjmp	.+16     	; 0xb3e <Paddle_Tick+0xda>
     b2e:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     b32:	81 30       	cpi	r24, 0x01	; 1
     b34:	a1 f1       	breq	.+104    	; 0xb9e <Paddle_Tick+0x13a>
     b36:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
     b3a:	81 30       	cpi	r24, 0x01	; 1
     b3c:	99 f1       	breq	.+102    	; 0xba4 <Paddle_Tick+0x140>
     b3e:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <gameReset>
     b42:	81 30       	cpi	r24, 0x01	; 1
     b44:	c1 f5       	brne	.+112    	; 0xbb6 <Paddle_Tick+0x152>
     b46:	11 c0       	rjmp	.+34     	; 0xb6a <Paddle_Tick+0x106>
     b48:	70 df       	rcall	.-288    	; 0xa2a <GetNESControllerButton>
     b4a:	88 23       	and	r24, r24
     b4c:	a1 f1       	breq	.+104    	; 0xbb6 <Paddle_Tick+0x152>
     b4e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <button_hold_count.1996>
     b52:	82 30       	cpi	r24, 0x02	; 2
     b54:	20 f4       	brcc	.+8      	; 0xb5e <Paddle_Tick+0xfa>
     b56:	8f 5f       	subi	r24, 0xFF	; 255
     b58:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <button_hold_count.1996>
     b5c:	46 c0       	rjmp	.+140    	; 0xbea <Paddle_Tick+0x186>
     b5e:	10 34       	cpi	r17, 0x40	; 64
     b60:	79 f1       	breq	.+94     	; 0xbc0 <Paddle_Tick+0x15c>
     b62:	10 38       	cpi	r17, 0x80	; 128
     b64:	09 f0       	breq	.+2      	; 0xb68 <Paddle_Tick+0x104>
     b66:	41 c0       	rjmp	.+130    	; 0xbea <Paddle_Tick+0x186>
     b68:	30 c0       	rjmp	.+96     	; 0xbca <Paddle_Tick+0x166>
     b6a:	80 e8       	ldi	r24, 0x80	; 128
     b6c:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <bottom_row.1994>
     b70:	88 ef       	ldi	r24, 0xF8	; 248
     b72:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <paddle_pos.1995>
     b76:	c1 e0       	ldi	r28, 0x01	; 1
     b78:	d0 e0       	ldi	r29, 0x00	; 0
     b7a:	37 c0       	rjmp	.+110    	; 0xbea <Paddle_Tick+0x186>
     b7c:	88 0f       	add	r24, r24
     b7e:	81 60       	ori	r24, 0x01	; 1
     b80:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <paddle_pos.1995>
     b84:	c5 e0       	ldi	r28, 0x05	; 5
     b86:	d0 e0       	ldi	r29, 0x00	; 0
     b88:	30 c0       	rjmp	.+96     	; 0xbea <Paddle_Tick+0x186>
     b8a:	86 95       	lsr	r24
     b8c:	80 68       	ori	r24, 0x80	; 128
     b8e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <paddle_pos.1995>
     b92:	c6 e0       	ldi	r28, 0x06	; 6
     b94:	d0 e0       	ldi	r29, 0x00	; 0
     b96:	29 c0       	rjmp	.+82     	; 0xbea <Paddle_Tick+0x186>
     b98:	c3 e0       	ldi	r28, 0x03	; 3
     b9a:	d0 e0       	ldi	r29, 0x00	; 0
     b9c:	26 c0       	rjmp	.+76     	; 0xbea <Paddle_Tick+0x186>
     b9e:	c3 e0       	ldi	r28, 0x03	; 3
     ba0:	d0 e0       	ldi	r29, 0x00	; 0
     ba2:	23 c0       	rjmp	.+70     	; 0xbea <Paddle_Tick+0x186>
     ba4:	c3 e0       	ldi	r28, 0x03	; 3
     ba6:	d0 e0       	ldi	r29, 0x00	; 0
     ba8:	20 c0       	rjmp	.+64     	; 0xbea <Paddle_Tick+0x186>
     baa:	c5 e0       	ldi	r28, 0x05	; 5
     bac:	d0 e0       	ldi	r29, 0x00	; 0
     bae:	1d c0       	rjmp	.+58     	; 0xbea <Paddle_Tick+0x186>
     bb0:	c6 e0       	ldi	r28, 0x06	; 6
     bb2:	d0 e0       	ldi	r29, 0x00	; 0
     bb4:	1a c0       	rjmp	.+52     	; 0xbea <Paddle_Tick+0x186>
     bb6:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <button_hold_count.1996>
     bba:	c4 e0       	ldi	r28, 0x04	; 4
     bbc:	d0 e0       	ldi	r29, 0x00	; 0
     bbe:	15 c0       	rjmp	.+42     	; 0xbea <Paddle_Tick+0x186>
     bc0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <paddle_pos.1995>
     bc4:	8f 31       	cpi	r24, 0x1F	; 31
     bc6:	d1 f6       	brne	.-76     	; 0xb7c <Paddle_Tick+0x118>
     bc8:	f0 cf       	rjmp	.-32     	; 0xbaa <Paddle_Tick+0x146>
     bca:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <paddle_pos.1995>
     bce:	88 3f       	cpi	r24, 0xF8	; 248
     bd0:	e1 f6       	brne	.-72     	; 0xb8a <Paddle_Tick+0x126>
     bd2:	ee cf       	rjmp	.-36     	; 0xbb0 <Paddle_Tick+0x14c>
     bd4:	c3 e0       	ldi	r28, 0x03	; 3
     bd6:	d0 e0       	ldi	r29, 0x00	; 0
     bd8:	08 c0       	rjmp	.+16     	; 0xbea <Paddle_Tick+0x186>
     bda:	c3 e0       	ldi	r28, 0x03	; 3
     bdc:	d0 e0       	ldi	r29, 0x00	; 0
     bde:	05 c0       	rjmp	.+10     	; 0xbea <Paddle_Tick+0x186>
     be0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <NES_RIGHT_DPAD>
     be4:	18 13       	cpse	r17, r24
     be6:	ab cf       	rjmp	.-170    	; 0xb3e <Paddle_Tick+0xda>
     be8:	84 cf       	rjmp	.-248    	; 0xaf2 <Paddle_Tick+0x8e>
     bea:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <bottom_row.1994>
     bee:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <DISPLAY_PORTA>
     bf2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <paddle_pos.1995>
     bf6:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <DISPLAY_PORTB>
     bfa:	ce 01       	movw	r24, r28
     bfc:	df 91       	pop	r29
     bfe:	cf 91       	pop	r28
     c00:	1f 91       	pop	r17
     c02:	08 95       	ret

00000c04 <TimerSet>:
     c04:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <_avr_timer_M>
     c08:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <_avr_timer_M+0x1>
     c0c:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <_avr_timer_M+0x2>
     c10:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <_avr_timer_M+0x3>
     c14:	60 93 d3 01 	sts	0x01D3, r22	; 0x8001d3 <_avr_timer_cntcurr>
     c18:	70 93 d4 01 	sts	0x01D4, r23	; 0x8001d4 <_avr_timer_cntcurr+0x1>
     c1c:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <_avr_timer_cntcurr+0x2>
     c20:	90 93 d6 01 	sts	0x01D6, r25	; 0x8001d6 <_avr_timer_cntcurr+0x3>
     c24:	08 95       	ret

00000c26 <TimerOn>:
     c26:	8b e0       	ldi	r24, 0x0B	; 11
     c28:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     c2c:	8d e7       	ldi	r24, 0x7D	; 125
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     c34:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     c38:	82 e0       	ldi	r24, 0x02	; 2
     c3a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     c3e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c42:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     c46:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <_avr_timer_M>
     c4a:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <_avr_timer_M+0x1>
     c4e:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <_avr_timer_M+0x2>
     c52:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <_avr_timer_M+0x3>
     c56:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <_avr_timer_cntcurr>
     c5a:	90 93 d4 01 	sts	0x01D4, r25	; 0x8001d4 <_avr_timer_cntcurr+0x1>
     c5e:	a0 93 d5 01 	sts	0x01D5, r26	; 0x8001d5 <_avr_timer_cntcurr+0x2>
     c62:	b0 93 d6 01 	sts	0x01D6, r27	; 0x8001d6 <_avr_timer_cntcurr+0x3>
     c66:	8f b7       	in	r24, 0x3f	; 63
     c68:	80 68       	ori	r24, 0x80	; 128
     c6a:	8f bf       	out	0x3f, r24	; 63
     c6c:	08 95       	ret

00000c6e <delay_ms>:

void delay_ms(int miliSec) //for 8 Mhz crystal

{
    int i,j;
    for(i=0;i<miliSec;i++)
     c6e:	18 16       	cp	r1, r24
     c70:	19 06       	cpc	r1, r25
     c72:	5c f0       	brlt	.+22     	; 0xc8a <delay_ms+0x1c>
     c74:	08 95       	ret
    for(j=0;j<775;j++)
  {
   asm("nop");
     c76:	00 00       	nop
     c78:	21 50       	subi	r18, 0x01	; 1
     c7a:	31 09       	sbc	r19, r1
void delay_ms(int miliSec) //for 8 Mhz crystal

{
    int i,j;
    for(i=0;i<miliSec;i++)
    for(j=0;j<775;j++)
     c7c:	e1 f7       	brne	.-8      	; 0xc76 <delay_ms+0x8>

void delay_ms(int miliSec) //for 8 Mhz crystal

{
    int i,j;
    for(i=0;i<miliSec;i++)
     c7e:	4f 5f       	subi	r20, 0xFF	; 255
     c80:	5f 4f       	sbci	r21, 0xFF	; 255
     c82:	84 17       	cp	r24, r20
     c84:	95 07       	cpc	r25, r21
     c86:	19 f4       	brne	.+6      	; 0xc8e <delay_ms+0x20>
     c88:	08 95       	ret
     c8a:	40 e0       	ldi	r20, 0x00	; 0
     c8c:	50 e0       	ldi	r21, 0x00	; 0
   }
}

void delay_ms(int miliSec) //for 8 Mhz crystal

{
     c8e:	27 e0       	ldi	r18, 0x07	; 7
     c90:	33 e0       	ldi	r19, 0x03	; 3
     c92:	f1 cf       	rjmp	.-30     	; 0xc76 <delay_ms+0x8>

00000c94 <LCD_WriteCommand>:
	LCD_WriteCommand(0x01);
	delay_ms(10);						 
}

void LCD_WriteCommand (unsigned char Command) {
   CLR_BIT(CONTROL_BUS,RS);
     c94:	46 98       	cbi	0x08, 6	; 8
   DATA_BUS = Command;
     c96:	8b b9       	out	0x0b, r24	; 11
   SET_BIT(CONTROL_BUS,E);
     c98:	47 9a       	sbi	0x08, 7	; 8
   asm("nop");
     c9a:	00 00       	nop
   CLR_BIT(CONTROL_BUS,E);
     c9c:	47 98       	cbi	0x08, 7	; 8
   delay_ms(2); // ClearScreen requires 1.52ms to execute
     c9e:	82 e0       	ldi	r24, 0x02	; 2
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	e5 cf       	rjmp	.-54     	; 0xc6e <delay_ms>
     ca4:	08 95       	ret

00000ca6 <LCD_ClearScreen>:
#define E 7			// pin number of uC connected to pin 6 of LCD disp.

/*-------------------------------------------------------------------------*/

void LCD_ClearScreen(void) {
   LCD_WriteCommand(0x01);
     ca6:	81 e0       	ldi	r24, 0x01	; 1
     ca8:	f5 cf       	rjmp	.-22     	; 0xc94 <LCD_WriteCommand>
     caa:	08 95       	ret

00000cac <LCD_Cursor>:
      LCD_WriteData(*string++);
   }
}

void LCD_Cursor(unsigned char column) {
   if ( column < 17 ) { // 16x1 LCD: column < 9
     cac:	81 31       	cpi	r24, 0x11	; 17
     cae:	18 f4       	brcc	.+6      	; 0xcb6 <LCD_Cursor+0xa>
						// 16x2 LCD: column < 17
      LCD_WriteCommand(0x80 + column - 1);
     cb0:	81 58       	subi	r24, 0x81	; 129
     cb2:	f0 cf       	rjmp	.-32     	; 0xc94 <LCD_WriteCommand>
   } else {
      LCD_WriteCommand(0xB8 + column - 9);	// 16x1 LCD: column - 1
     cb4:	08 95       	ret
     cb6:	81 55       	subi	r24, 0x51	; 81
     cb8:	ed cf       	rjmp	.-38     	; 0xc94 <LCD_WriteCommand>
     cba:	08 95       	ret

00000cbc <LCD_init>:
}

void LCD_init(void) {

    //wait for 100 ms.
	delay_ms(100);
     cbc:	84 e6       	ldi	r24, 0x64	; 100
     cbe:	90 e0       	ldi	r25, 0x00	; 0
	LCD_WriteCommand(0x38);
     cc0:	d6 df       	rcall	.-84     	; 0xc6e <delay_ms>
	LCD_WriteCommand(0x06);
     cc2:	88 e3       	ldi	r24, 0x38	; 56
	LCD_WriteCommand(0x0f);
     cc4:	e7 df       	rcall	.-50     	; 0xc94 <LCD_WriteCommand>
	LCD_WriteCommand(0x01);
     cc6:	86 e0       	ldi	r24, 0x06	; 6
     cc8:	e5 df       	rcall	.-54     	; 0xc94 <LCD_WriteCommand>
	delay_ms(10);						 
     cca:	8f e0       	ldi	r24, 0x0F	; 15
     ccc:	e3 df       	rcall	.-58     	; 0xc94 <LCD_WriteCommand>
     cce:	81 e0       	ldi	r24, 0x01	; 1
     cd0:	e1 df       	rcall	.-62     	; 0xc94 <LCD_WriteCommand>
     cd2:	8a e0       	ldi	r24, 0x0A	; 10
     cd4:	90 e0       	ldi	r25, 0x00	; 0
     cd6:	cb cf       	rjmp	.-106    	; 0xc6e <delay_ms>
     cd8:	08 95       	ret

00000cda <LCD_WriteData>:
   CLR_BIT(CONTROL_BUS,E);
   delay_ms(2); // ClearScreen requires 1.52ms to execute
}

void LCD_WriteData(unsigned char Data) {
   SET_BIT(CONTROL_BUS,RS);
     cda:	46 9a       	sbi	0x08, 6	; 8
   DATA_BUS = Data;
     cdc:	8b b9       	out	0x0b, r24	; 11
   SET_BIT(CONTROL_BUS,E);
     cde:	47 9a       	sbi	0x08, 7	; 8
   asm("nop");
     ce0:	00 00       	nop
   CLR_BIT(CONTROL_BUS,E);
     ce2:	47 98       	cbi	0x08, 7	; 8
   delay_ms(1);
     ce4:	81 e0       	ldi	r24, 0x01	; 1
     ce6:	90 e0       	ldi	r25, 0x00	; 0
     ce8:	c2 cf       	rjmp	.-124    	; 0xc6e <delay_ms>
     cea:	08 95       	ret

00000cec <LCD_DisplayString>:
}

void LCD_DisplayString( unsigned char column, const unsigned char* string) {
     cec:	0f 93       	push	r16
     cee:	1f 93       	push	r17
     cf0:	cf 93       	push	r28
     cf2:	df 93       	push	r29
     cf4:	18 2f       	mov	r17, r24
   LCD_ClearScreen();
     cf6:	eb 01       	movw	r28, r22
   unsigned char c = column;
   while(*string) {
     cf8:	d6 df       	rcall	.-84     	; 0xca6 <LCD_ClearScreen>
     cfa:	88 81       	ld	r24, Y
     cfc:	88 23       	and	r24, r24
      LCD_Cursor(c++);
     cfe:	51 f0       	breq	.+20     	; 0xd14 <LCD_DisplayString+0x28>
     d00:	01 e0       	ldi	r16, 0x01	; 1
     d02:	01 0f       	add	r16, r17
      LCD_WriteData(*string++);
     d04:	81 2f       	mov	r24, r17
     d06:	d2 df       	rcall	.-92     	; 0xcac <LCD_Cursor>
     d08:	89 91       	ld	r24, Y+

void LCD_DisplayString( unsigned char column, const unsigned char* string) {
   LCD_ClearScreen();
   unsigned char c = column;
   while(*string) {
      LCD_Cursor(c++);
     d0a:	e7 df       	rcall	.-50     	; 0xcda <LCD_WriteData>
}

void LCD_DisplayString( unsigned char column, const unsigned char* string) {
   LCD_ClearScreen();
   unsigned char c = column;
   while(*string) {
     d0c:	10 2f       	mov	r17, r16
     d0e:	88 81       	ld	r24, Y
     d10:	81 11       	cpse	r24, r1
      LCD_Cursor(c++);
      LCD_WriteData(*string++);
   }
}
     d12:	f6 cf       	rjmp	.-20     	; 0xd00 <LCD_DisplayString+0x14>
     d14:	df 91       	pop	r29
     d16:	cf 91       	pop	r28
     d18:	1f 91       	pop	r17
     d1a:	0f 91       	pop	r16
     d1c:	08 95       	ret

00000d1e <GAME_Tick>:

// ====================
// GAME_TICK:OUTPUT TO LED matrix
// ====================
enum G_States {G_START, G_INIT, G_MENU, G_WAIT1, G_PLAY, G_WAIT2, G_WAIT3, G_PAUSE, G_ENDTURN, G_GAME_OVER, G_WIN,  G_RESET};
int GAME_Tick(int state) {
     d1e:	cf 93       	push	r28
     d20:	df 93       	push	r29

	// === Local Variables ===
	unsigned char button = GetNESControllerButton();
     d22:	ec 01       	movw	r28, r24
	unsigned static short game_win_count = 0;
	unsigned static short game_win_display_time = 3000;
	unsigned static short reset_count = 0;

	// === Transitions ===
	switch (state) {
     d24:	82 de       	rcall	.-764    	; 0xa2a <GetNESControllerButton>
     d26:	fe 01       	movw	r30, r28
     d28:	31 97       	sbiw	r30, 0x01	; 1
     d2a:	eb 30       	cpi	r30, 0x0B	; 11
     d2c:	f1 05       	cpc	r31, r1
     d2e:	08 f0       	brcs	.+2      	; 0xd32 <GAME_Tick+0x14>
     d30:	19 c1       	rjmp	.+562    	; 0xf64 <GAME_Tick+0x246>
     d32:	ee 59       	subi	r30, 0x9E	; 158
     d34:	ff 4f       	sbci	r31, 0xFF	; 255
			state = G_MENU;
			gameInPlay = 0x00;
			gameInPause = 0x00;
			gameEndTurn = 0x00;
			gameOver = 0x00;
			gameReset = 0x00;
     d36:	a4 c4       	rjmp	.+2376   	; 0x1680 <__tablejump2__>
     d38:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <gameReset>
		break;

		case G_MENU:
			if (button == NES_START)
     d3c:	2f c1       	rjmp	.+606    	; 0xf9c <GAME_Tick+0x27e>
     d3e:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <NES_START>
     d42:	89 13       	cpse	r24, r25
     d44:	2b c1       	rjmp	.+598    	; 0xf9c <GAME_Tick+0x27e>
				state = G_WAIT1;
			}
		break;
		
		case G_WAIT1:
			if (button&NES_START)
     d46:	a2 c1       	rjmp	.+836    	; 0x108c <GAME_Tick+0x36e>
     d48:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <NES_START>
     d4c:	28 2f       	mov	r18, r24
     d4e:	29 23       	and	r18, r25
     d50:	09 f0       	breq	.+2      	; 0xd54 <GAME_Tick+0x36>
			{
				state = G_WAIT1;
			}
			else if (button != NES_START)
     d52:	bc c1       	rjmp	.+888    	; 0x10cc <GAME_Tick+0x3ae>
     d54:	89 13       	cpse	r24, r25
     d56:	3d c1       	rjmp	.+634    	; 0xfd2 <GAME_Tick+0x2b4>
		case G_PLAY:
			state = G_WAIT2;
		break;

		case G_WAIT2:
			if ((button != NES_START) && (gameInPlay == 0x01) && (gameOver==0x00)&& (gameInPause == 0x00) && (gameEndTurn == 0x00))
     d58:	b9 c1       	rjmp	.+882    	; 0x10cc <GAME_Tick+0x3ae>
     d5a:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <NES_START>
     d5e:	89 17       	cp	r24, r25
     d60:	09 f4       	brne	.+2      	; 0xd64 <GAME_Tick+0x46>
     d62:	78 c1       	rjmp	.+752    	; 0x1054 <GAME_Tick+0x336>
     d64:	20 91 d1 01 	lds	r18, 0x01D1	; 0x8001d1 <gameInPlay>
     d68:	21 30       	cpi	r18, 0x01	; 1
     d6a:	09 f0       	breq	.+2      	; 0xd6e <GAME_Tick+0x50>
     d6c:	9d c1       	rjmp	.+826    	; 0x10a8 <GAME_Tick+0x38a>
     d6e:	20 91 cd 01 	lds	r18, 0x01CD	; 0x8001cd <gameOver>
     d72:	21 11       	cpse	r18, r1
     d74:	a5 c1       	rjmp	.+842    	; 0x10c0 <GAME_Tick+0x3a2>
     d76:	20 91 d0 01 	lds	r18, 0x01D0	; 0x8001d0 <gameInPause>
     d7a:	21 11       	cpse	r18, r1
     d7c:	a1 c1       	rjmp	.+834    	; 0x10c0 <GAME_Tick+0x3a2>
     d7e:	20 91 ce 01 	lds	r18, 0x01CE	; 0x8001ce <gameEndTurn>
     d82:	22 23       	and	r18, r18
     d84:	09 f4       	brne	.+2      	; 0xd88 <GAME_Tick+0x6a>
     d86:	6e c1       	rjmp	.+732    	; 0x1064 <GAME_Tick+0x346>
			}
			else if (button==(NES_START|NES_SELECT))
			{
				state = G_RESET;
			}
			else if ((button == NES_START) && (gameInPlay == 0x01) && (gameOver==0x00) && (gameInPause == 0x00) && (gameEndTurn == 0x00))
     d88:	9b c1       	rjmp	.+822    	; 0x10c0 <GAME_Tick+0x3a2>
     d8a:	90 91 d1 01 	lds	r25, 0x01D1	; 0x8001d1 <gameInPlay>
     d8e:	91 30       	cpi	r25, 0x01	; 1
     d90:	e1 f4       	brne	.+56     	; 0xdca <GAME_Tick+0xac>
     d92:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <gameOver>
     d96:	91 11       	cpse	r25, r1
     d98:	18 c0       	rjmp	.+48     	; 0xdca <GAME_Tick+0xac>
     d9a:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
     d9e:	81 11       	cpse	r24, r1
     da0:	05 c0       	rjmp	.+10     	; 0xdac <GAME_Tick+0x8e>
     da2:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     da6:	88 23       	and	r24, r24
     da8:	09 f4       	brne	.+2      	; 0xdac <GAME_Tick+0x8e>
			{
				state = G_WAIT3;
			}
			else if ((gameInPlay == 0x01) && (gameOver==0x00)&& (gameInPause == 0x00) && (gameEndTurn == 0x01))
     daa:	5a c1       	rjmp	.+692    	; 0x1060 <GAME_Tick+0x342>
     dac:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
     db0:	81 11       	cpse	r24, r1
     db2:	75 c1       	rjmp	.+746    	; 0x109e <GAME_Tick+0x380>
     db4:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
     db8:	81 30       	cpi	r24, 0x01	; 1
     dba:	09 f0       	breq	.+2      	; 0xdbe <GAME_Tick+0xa0>
			{
				 state = G_ENDTURN;
				 gameNumberOfTurns--;
     dbc:	53 c1       	rjmp	.+678    	; 0x1064 <GAME_Tick+0x346>
     dbe:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <gameNumberOfTurns>
     dc2:	81 50       	subi	r24, 0x01	; 1
     dc4:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <gameNumberOfTurns>
			}
			else if ((gameEndTurn == 0x01))
     dc8:	58 c1       	rjmp	.+688    	; 0x107a <GAME_Tick+0x35c>
     dca:	90 91 ce 01 	lds	r25, 0x01CE	; 0x8001ce <gameEndTurn>
     dce:	91 30       	cpi	r25, 0x01	; 1
			{
				state = G_ENDTURN;
				gameNumberOfTurns--;
     dd0:	31 f4       	brne	.+12     	; 0xdde <GAME_Tick+0xc0>
     dd2:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <gameNumberOfTurns>
     dd6:	81 50       	subi	r24, 0x01	; 1
     dd8:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <gameNumberOfTurns>
			}
			else if ((gameOver==0x01))
     ddc:	4e c1       	rjmp	.+668    	; 0x107a <GAME_Tick+0x35c>
     dde:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <gameOver>
     de2:	91 30       	cpi	r25, 0x01	; 1
     de4:	09 f0       	breq	.+2      	; 0xde8 <GAME_Tick+0xca>
     de6:	3e c1       	rjmp	.+636    	; 0x1064 <GAME_Tick+0x346>
			else
			{
				state = G_WAIT2;
			}

			if (SCORE == 0x10)
     de8:	42 c1       	rjmp	.+644    	; 0x106e <GAME_Tick+0x350>
     dea:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <SCORE>
     dee:	80 31       	cpi	r24, 0x10	; 16
     df0:	09 f0       	breq	.+2      	; 0xdf4 <GAME_Tick+0xd6>
			{
				if (game_win_count == 0)
     df2:	13 c1       	rjmp	.+550    	; 0x101a <GAME_Tick+0x2fc>
     df4:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <game_win_count.2206>
     df8:	90 91 c9 01 	lds	r25, 0x01C9	; 0x8001c9 <game_win_count.2206+0x1>
     dfc:	89 2b       	or	r24, r25
     dfe:	09 f0       	breq	.+2      	; 0xe02 <GAME_Tick+0xe4>
				{
					LCD_DisplayString(1, "YOU WIN!");
     e00:	48 c1       	rjmp	.+656    	; 0x1092 <GAME_Tick+0x374>
     e02:	6a e1       	ldi	r22, 0x1A	; 26
     e04:	71 e0       	ldi	r23, 0x01	; 1
     e06:	81 e0       	ldi	r24, 0x01	; 1
				}
				state = G_WIN;
     e08:	71 df       	rcall	.-286    	; 0xcec <LCD_DisplayString>
     e0a:	ca e0       	ldi	r28, 0x0A	; 10
     e0c:	d0 e0       	ldi	r29, 0x00	; 0
			}

		break;

		case G_WIN:
			if (game_win_count >= game_win_display_time)
     e0e:	5e c1       	rjmp	.+700    	; 0x10cc <GAME_Tick+0x3ae>
     e10:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <game_win_count.2206>
     e14:	90 91 c9 01 	lds	r25, 0x01C9	; 0x8001c9 <game_win_count.2206+0x1>
     e18:	88 3b       	cpi	r24, 0xB8	; 184
     e1a:	9b 40       	sbci	r25, 0x0B	; 11
			{
				if (SCORE > HIGH_SCORE)
     e1c:	a8 f0       	brcs	.+42     	; 0xe48 <GAME_Tick+0x12a>
     e1e:	60 91 d2 01 	lds	r22, 0x01D2	; 0x8001d2 <SCORE>
     e22:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <HIGH_SCORE>
     e26:	86 17       	cp	r24, r22
				{
					HIGH_SCORE&=0;
					HIGH_SCORE|=SCORE;
     e28:	28 f4       	brcc	.+10     	; 0xe34 <GAME_Tick+0x116>
					eeprom_write_byte ((uint8_t*)46 , HIGH_SCORE );
     e2a:	60 93 d8 01 	sts	0x01D8, r22	; 0x8001d8 <HIGH_SCORE>
     e2e:	8e e2       	ldi	r24, 0x2E	; 46
     e30:	90 e0       	ldi	r25, 0x00	; 0
				state = G_RESET; // RESET GAME
				gameInPlay = 0x00;
				gameInPause = 0x00;
				gameEndTurn = 0x00;
				gameReset = 0x01;
				SCORE = 0x00;
     e32:	49 d4       	rcall	.+2194   	; 0x16c6 <eeprom_write_byte>
     e34:	10 92 d2 01 	sts	0x01D2, r1	; 0x8001d2 <SCORE>
				gameNumberOfTurns = 0x03;
     e38:	83 e0       	ldi	r24, 0x03	; 3
     e3a:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <gameNumberOfTurns>
				game_over_count = 0;
     e3e:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <game_over_count.2204+0x1>
     e42:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <game_over_count.2204>
			}
			else
			{
				// RECORD HIGH SCORE
				if (SCORE > HIGH_SCORE)
     e46:	e9 c0       	rjmp	.+466    	; 0x101a <GAME_Tick+0x2fc>
     e48:	60 91 d2 01 	lds	r22, 0x01D2	; 0x8001d2 <SCORE>
     e4c:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <HIGH_SCORE>
				{
					HIGH_SCORE&=0;
					HIGH_SCORE|=SCORE;
     e50:	86 17       	cp	r24, r22
					eeprom_write_byte ((uint8_t*)46 , HIGH_SCORE );
     e52:	28 f4       	brcc	.+10     	; 0xe5e <GAME_Tick+0x140>
     e54:	60 93 d8 01 	sts	0x01D8, r22	; 0x8001d8 <HIGH_SCORE>
     e58:	8e e2       	ldi	r24, 0x2E	; 46
				}
				game_win_count++;
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	34 d4       	rcall	.+2152   	; 0x16c6 <eeprom_write_byte>
     e5e:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <game_win_count.2206>
     e62:	90 91 c9 01 	lds	r25, 0x01C9	; 0x8001c9 <game_win_count.2206+0x1>
     e66:	01 96       	adiw	r24, 0x01	; 1
     e68:	90 93 c9 01 	sts	0x01C9, r25	; 0x8001c9 <game_win_count.2206+0x1>
     e6c:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <game_win_count.2206>
			}
		break;

		case G_WAIT3:
			if ((NES_START&button) == 0x00)
     e70:	2d c1       	rjmp	.+602    	; 0x10cc <GAME_Tick+0x3ae>
     e72:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <NES_START>
     e76:	89 23       	and	r24, r25
     e78:	09 f4       	brne	.+2      	; 0xe7c <GAME_Tick+0x15e>
				state = G_PAUSE;
			}
		break;

		case G_PAUSE:
			if (button == NES_START)
     e7a:	c3 c0       	rjmp	.+390    	; 0x1002 <GAME_Tick+0x2e4>
     e7c:	27 c1       	rjmp	.+590    	; 0x10cc <GAME_Tick+0x3ae>
     e7e:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <NES_START>
     e82:	89 13       	cpse	r24, r25
			}
			
		break;

		case G_ENDTURN:
			if ((button == NES_START) && (gameNumberOfTurns > 0x00))
     e84:	be c0       	rjmp	.+380    	; 0x1002 <GAME_Tick+0x2e4>
     e86:	08 c1       	rjmp	.+528    	; 0x1098 <GAME_Tick+0x37a>
     e88:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <NES_START>
     e8c:	89 13       	cpse	r24, r25
     e8e:	10 c0       	rjmp	.+32     	; 0xeb0 <GAME_Tick+0x192>
     e90:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <gameNumberOfTurns>
			{
				gameInPlay = 0x01;
     e94:	88 23       	and	r24, r24
     e96:	81 f0       	breq	.+32     	; 0xeb8 <GAME_Tick+0x19a>
     e98:	81 e0       	ldi	r24, 0x01	; 1
				gameInPause = 0x00;
     e9a:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <gameInPlay>
				gameEndTurn = 0x00;
     e9e:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <gameInPause>
				gameOver = 0x00;
     ea2:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <gameEndTurn>
				state = G_WAIT1;
     ea6:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <gameOver>
     eaa:	c3 e0       	ldi	r28, 0x03	; 3
			}
			else if (gameNumberOfTurns <= 0x00)
     eac:	d0 e0       	ldi	r29, 0x00	; 0
     eae:	0e c1       	rjmp	.+540    	; 0x10cc <GAME_Tick+0x3ae>
     eb0:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <gameNumberOfTurns>
			{
				gameInPlay = 0x00;
     eb4:	81 11       	cpse	r24, r1
     eb6:	99 c0       	rjmp	.+306    	; 0xfea <GAME_Tick+0x2cc>
				gameInPause = 0x00;
     eb8:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <gameInPlay>
				gameEndTurn = 0x00;
     ebc:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <gameInPause>
				gameOver = 0x01;
     ec0:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <gameEndTurn>
     ec4:	81 e0       	ldi	r24, 0x01	; 1
				state = G_GAME_OVER;
     ec6:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <gameOver>
     eca:	c9 e0       	ldi	r28, 0x09	; 9
			}
		break;

		case G_GAME_OVER:
			if (game_over_count >= game_over_display_time)
     ecc:	d0 e0       	ldi	r29, 0x00	; 0
     ece:	fe c0       	rjmp	.+508    	; 0x10cc <GAME_Tick+0x3ae>
     ed0:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <game_over_count.2204>
     ed4:	90 91 c7 01 	lds	r25, 0x01C7	; 0x8001c7 <game_over_count.2204+0x1>
     ed8:	88 38       	cpi	r24, 0x88	; 136
			{
				if (SCORE > HIGH_SCORE)
     eda:	93 41       	sbci	r25, 0x13	; 19
     edc:	a8 f0       	brcs	.+42     	; 0xf08 <GAME_Tick+0x1ea>
     ede:	60 91 d2 01 	lds	r22, 0x01D2	; 0x8001d2 <SCORE>
     ee2:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <HIGH_SCORE>
				{
					HIGH_SCORE&=0;
					HIGH_SCORE|=SCORE;
     ee6:	86 17       	cp	r24, r22
					eeprom_write_byte ((uint8_t*)46 , HIGH_SCORE );
     ee8:	28 f4       	brcc	.+10     	; 0xef4 <GAME_Tick+0x1d6>
     eea:	60 93 d8 01 	sts	0x01D8, r22	; 0x8001d8 <HIGH_SCORE>
     eee:	8e e2       	ldi	r24, 0x2E	; 46
				state = G_RESET; // RESET GAME		
				gameInPlay = 0x00;
				gameInPause = 0x00;
				gameEndTurn = 0x00;
				gameReset = 0x01;
				SCORE = 0x00;
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	e9 d3       	rcall	.+2002   	; 0x16c6 <eeprom_write_byte>
				gameNumberOfTurns = 0x03;
     ef4:	10 92 d2 01 	sts	0x01D2, r1	; 0x8001d2 <SCORE>
     ef8:	83 e0       	ldi	r24, 0x03	; 3
				game_over_count = 0;
     efa:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <gameNumberOfTurns>
     efe:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <game_over_count.2204+0x1>
     f02:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <game_over_count.2204>
			}
			else 
			{
				// RECORD HIGH SCORE
				if (SCORE > HIGH_SCORE)
     f06:	89 c0       	rjmp	.+274    	; 0x101a <GAME_Tick+0x2fc>
     f08:	60 91 d2 01 	lds	r22, 0x01D2	; 0x8001d2 <SCORE>
     f0c:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <HIGH_SCORE>
				{
					HIGH_SCORE&=0;
					HIGH_SCORE|=SCORE;
     f10:	86 17       	cp	r24, r22
					eeprom_write_byte ((uint8_t*)46 , HIGH_SCORE );
     f12:	28 f4       	brcc	.+10     	; 0xf1e <GAME_Tick+0x200>
     f14:	60 93 d8 01 	sts	0x01D8, r22	; 0x8001d8 <HIGH_SCORE>
     f18:	8e e2       	ldi	r24, 0x2E	; 46
				}
				game_over_count++;
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	d4 d3       	rcall	.+1960   	; 0x16c6 <eeprom_write_byte>
     f1e:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <game_over_count.2204>
     f22:	90 91 c7 01 	lds	r25, 0x01C7	; 0x8001c7 <game_over_count.2204+0x1>
     f26:	01 96       	adiw	r24, 0x01	; 1
     f28:	90 93 c7 01 	sts	0x01C7, r25	; 0x8001c7 <game_over_count.2204+0x1>
     f2c:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <game_over_count.2204>
			}
		break;

		case G_RESET:
			if (/*((button != NES_START) || (button != NES_SELECT)) &&*/ (reset_count > longestPeriod + 100))
     f30:	cd c0       	rjmp	.+410    	; 0x10cc <GAME_Tick+0x3ae>
     f32:	c0 91 c4 01 	lds	r28, 0x01C4	; 0x8001c4 <__data_end>
     f36:	d0 91 c5 01 	lds	r29, 0x01C5	; 0x8001c5 <__data_end+0x1>
     f3a:	cd 32       	cpi	r28, 0x2D	; 45
     f3c:	81 e0       	ldi	r24, 0x01	; 1
			{
				state = G_INIT;
				reset_count = 0;
     f3e:	d8 07       	cpc	r29, r24
     f40:	28 f0       	brcs	.+10     	; 0xf4c <GAME_Tick+0x22e>
     f42:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__data_end+0x1>
			}
			else
			{
				
				if (reset_count == 0)
     f46:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__data_end>
				{	
					LCD_DisplayString(1, "LOADING...      ");
     f4a:	0c c0       	rjmp	.+24     	; 0xf64 <GAME_Tick+0x246>
     f4c:	20 97       	sbiw	r28, 0x00	; 0
     f4e:	21 f4       	brne	.+8      	; 0xf58 <GAME_Tick+0x23a>
     f50:	63 e2       	ldi	r22, 0x23	; 35
     f52:	71 e0       	ldi	r23, 0x01	; 1
				}
				reset_count++;
     f54:	81 e0       	ldi	r24, 0x01	; 1
     f56:	ca de       	rcall	.-620    	; 0xcec <LCD_DisplayString>
     f58:	21 96       	adiw	r28, 0x01	; 1
     f5a:	d0 93 c5 01 	sts	0x01C5, r29	; 0x8001c5 <__data_end+0x1>
     f5e:	c0 93 c4 01 	sts	0x01C4, r28	; 0x8001c4 <__data_end>
	switch (state) {
		case G_START:
		break;
		
		case G_INIT:
			gameInPlay = 0x00;
     f62:	5b c0       	rjmp	.+182    	; 0x101a <GAME_Tick+0x2fc>
			gameInPause = 0x00;
     f64:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <gameInPlay>
			gameEndTurn = 0x00;
     f68:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <gameInPause>
			gameOver = 0x00;
     f6c:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <gameEndTurn>

			if (SCORE > HIGH_SCORE)
     f70:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <gameOver>
     f74:	60 91 d2 01 	lds	r22, 0x01D2	; 0x8001d2 <SCORE>
     f78:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <HIGH_SCORE>
			{
				HIGH_SCORE = SCORE;
     f7c:	86 17       	cp	r24, r22
				eeprom_write_byte ((uint8_t*)46 , HIGH_SCORE );
     f7e:	28 f4       	brcc	.+10     	; 0xf8a <GAME_Tick+0x26c>
     f80:	60 93 d8 01 	sts	0x01D8, r22	; 0x8001d8 <HIGH_SCORE>
     f84:	8e e2       	ldi	r24, 0x2E	; 46

			}

			SCORE = 0x00;
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	9e d3       	rcall	.+1852   	; 0x16c6 <eeprom_write_byte>
			game_over_count = 0;
     f8a:	10 92 d2 01 	sts	0x01D2, r1	; 0x8001d2 <SCORE>
     f8e:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <game_over_count.2204+0x1>
		break;
     f92:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <game_over_count.2204>
     f96:	c1 e0       	ldi	r28, 0x01	; 1

		case G_MENU:
			gameInPlay = 0x00;
     f98:	d0 e0       	ldi	r29, 0x00	; 0
     f9a:	98 c0       	rjmp	.+304    	; 0x10cc <GAME_Tick+0x3ae>
			gameInPause = 0x00;
     f9c:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <gameInPlay>
			gameEndTurn = 0x00;
     fa0:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <gameInPause>
			gameOver = 0x00;
     fa4:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <gameEndTurn>

				//reset high score
				if (button == (NES_A|NES_B|NES_SELECT))
     fa8:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <gameOver>
     fac:	20 91 11 01 	lds	r18, 0x0111	; 0x800111 <NES_A>
     fb0:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <NES_B>
     fb4:	92 2b       	or	r25, r18
     fb6:	20 91 0f 01 	lds	r18, 0x010F	; 0x80010f <NES_SELECT>
				{
					eeprom_write_byte ((uint8_t*)46 , 0x00 );
     fba:	92 2b       	or	r25, r18
     fbc:	89 13       	cpse	r24, r25
     fbe:	44 c0       	rjmp	.+136    	; 0x1048 <GAME_Tick+0x32a>
     fc0:	60 e0       	ldi	r22, 0x00	; 0
     fc2:	8e e2       	ldi	r24, 0x2E	; 46
					HIGH_SCORE = 0x00;
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	7f d3       	rcall	.+1790   	; 0x16c6 <eeprom_write_byte>
     fc8:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <HIGH_SCORE>
     fcc:	c2 e0       	ldi	r28, 0x02	; 2
		
		case G_WAIT1:
		break;

		case G_PLAY:
			gameInPlay = 0x01;
     fce:	d0 e0       	ldi	r29, 0x00	; 0
     fd0:	7d c0       	rjmp	.+250    	; 0x10cc <GAME_Tick+0x3ae>
     fd2:	81 e0       	ldi	r24, 0x01	; 1
			gameInPause = 0x00;
     fd4:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <gameInPlay>
			gameEndTurn = 0x00;
     fd8:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <gameInPause>
			gameOver = 0x00;
     fdc:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <gameEndTurn>
		break;
     fe0:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <gameOver>
     fe4:	c4 e0       	ldi	r28, 0x04	; 4

		case G_WAIT3:
		break;
		
		case G_ENDTURN:
			gameInPlay = 0x00;
     fe6:	d0 e0       	ldi	r29, 0x00	; 0
     fe8:	71 c0       	rjmp	.+226    	; 0x10cc <GAME_Tick+0x3ae>
			gameInPause = 0x00;
     fea:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <gameInPlay>
			gameEndTurn = 0x01;
     fee:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <gameInPause>
     ff2:	81 e0       	ldi	r24, 0x01	; 1
			gameOver = 0x00;
     ff4:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <gameEndTurn>
		break;
     ff8:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <gameOver>
     ffc:	c8 e0       	ldi	r28, 0x08	; 8

		case G_WIN:
		break;

		case G_PAUSE:
			gameInPlay = 0x00;
     ffe:	d0 e0       	ldi	r29, 0x00	; 0
    1000:	65 c0       	rjmp	.+202    	; 0x10cc <GAME_Tick+0x3ae>
			gameInPause = 0x01;
    1002:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <gameInPlay>
    1006:	81 e0       	ldi	r24, 0x01	; 1
			gameEndTurn = 0x00;
    1008:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <gameInPause>
			gameOver = 0x00;
    100c:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <gameEndTurn>
		break;
    1010:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <gameOver>
    1014:	c7 e0       	ldi	r28, 0x07	; 7

		case G_RESET:
			gameInPlay = 0x00;
    1016:	d0 e0       	ldi	r29, 0x00	; 0
    1018:	59 c0       	rjmp	.+178    	; 0x10cc <GAME_Tick+0x3ae>
			gameInPause = 0x00;
    101a:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <gameInPlay>
			gameReset = 0x01;
    101e:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <gameInPause>
    1022:	81 e0       	ldi	r24, 0x01	; 1
			gameEndTurn = 0x00;
    1024:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <gameReset>

			if (SCORE > HIGH_SCORE)
    1028:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <gameEndTurn>
    102c:	60 91 d2 01 	lds	r22, 0x01D2	; 0x8001d2 <SCORE>
			{
				HIGH_SCORE = SCORE;
    1030:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <HIGH_SCORE>
				eeprom_write_byte ((uint8_t*)46 , HIGH_SCORE );
    1034:	86 17       	cp	r24, r22
    1036:	58 f4       	brcc	.+22     	; 0x104e <GAME_Tick+0x330>
    1038:	60 93 d8 01 	sts	0x01D8, r22	; 0x8001d8 <HIGH_SCORE>
    103c:	8e e2       	ldi	r24, 0x2E	; 46
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	42 d3       	rcall	.+1668   	; 0x16c6 <eeprom_write_byte>
    1042:	cb e0       	ldi	r28, 0x0B	; 11
    1044:	d0 e0       	ldi	r29, 0x00	; 0
    1046:	42 c0       	rjmp	.+132    	; 0x10cc <GAME_Tick+0x3ae>
    1048:	c2 e0       	ldi	r28, 0x02	; 2
    104a:	d0 e0       	ldi	r29, 0x00	; 0
    104c:	3f c0       	rjmp	.+126    	; 0x10cc <GAME_Tick+0x3ae>
		case G_WAIT2:
			if ((button != NES_START) && (gameInPlay == 0x01) && (gameOver==0x00)&& (gameInPause == 0x00) && (gameEndTurn == 0x00))
			{
				state = G_WAIT2;
			}
			else if (button==(NES_START|NES_SELECT))
    104e:	cb e0       	ldi	r28, 0x0B	; 11
    1050:	d0 e0       	ldi	r29, 0x00	; 0
    1052:	3c c0       	rjmp	.+120    	; 0x10cc <GAME_Tick+0x3ae>
    1054:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <NES_SELECT>
    1058:	98 2b       	or	r25, r24
			{
				state = G_RESET;
			}
			else if ((button == NES_START) && (gameInPlay == 0x01) && (gameOver==0x00) && (gameInPause == 0x00) && (gameEndTurn == 0x00))
			{
				state = G_WAIT3;
    105a:	89 13       	cpse	r24, r25
    105c:	96 ce       	rjmp	.-724    	; 0xd8a <GAME_Tick+0x6c>
			else
			{
				state = G_WAIT2;
			}

			if (SCORE == 0x10)
    105e:	c5 ce       	rjmp	.-630    	; 0xdea <GAME_Tick+0xcc>
    1060:	c6 e0       	ldi	r28, 0x06	; 6
    1062:	d0 e0       	ldi	r29, 0x00	; 0
    1064:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <SCORE>
    1068:	80 31       	cpi	r24, 0x10	; 16
    106a:	81 f5       	brne	.+96     	; 0x10cc <GAME_Tick+0x3ae>
    106c:	c3 ce       	rjmp	.-634    	; 0xdf4 <GAME_Tick+0xd6>
    106e:	90 91 d2 01 	lds	r25, 0x01D2	; 0x8001d2 <SCORE>
    1072:	90 31       	cpi	r25, 0x10	; 16
    1074:	09 f0       	breq	.+2      	; 0x1078 <GAME_Tick+0x35a>
    1076:	92 cf       	rjmp	.-220    	; 0xf9c <GAME_Tick+0x27e>
    1078:	bd ce       	rjmp	.-646    	; 0xdf4 <GAME_Tick+0xd6>
    107a:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <SCORE>
    107e:	80 31       	cpi	r24, 0x10	; 16
				state = G_PLAY;
			}
		break;

		case G_PLAY:
			state = G_WAIT2;
    1080:	09 f0       	breq	.+2      	; 0x1084 <GAME_Tick+0x366>
    1082:	b3 cf       	rjmp	.-154    	; 0xfea <GAME_Tick+0x2cc>
    1084:	b7 ce       	rjmp	.-658    	; 0xdf4 <GAME_Tick+0xd6>
		break;

		case G_MENU:
			if (button == NES_START)
			{
				state = G_WAIT1;
    1086:	c5 e0       	ldi	r28, 0x05	; 5
    1088:	d0 e0       	ldi	r29, 0x00	; 0
    108a:	20 c0       	rjmp	.+64     	; 0x10cc <GAME_Tick+0x3ae>
			{
				if (game_win_count == 0)
				{
					LCD_DisplayString(1, "YOU WIN!");
				}
				state = G_WIN;
    108c:	c3 e0       	ldi	r28, 0x03	; 3
    108e:	d0 e0       	ldi	r29, 0x00	; 0
    1090:	1d c0       	rjmp	.+58     	; 0x10cc <GAME_Tick+0x3ae>
		break;

		case G_PAUSE:
			if (button == NES_START)
			{
				state = G_WAIT1;
    1092:	ca e0       	ldi	r28, 0x0A	; 10
    1094:	d0 e0       	ldi	r29, 0x00	; 0
		break;
		
		default:
		break;
	}
	return state;
    1096:	1a c0       	rjmp	.+52     	; 0x10cc <GAME_Tick+0x3ae>
			else if ((gameInPlay == 0x01) && (gameOver==0x00)&& (gameInPause == 0x00) && (gameEndTurn == 0x01))
			{
				 state = G_ENDTURN;
				 gameNumberOfTurns--;
			}
			else if ((gameEndTurn == 0x01))
    1098:	c3 e0       	ldi	r28, 0x03	; 3
    109a:	d0 e0       	ldi	r29, 0x00	; 0
    109c:	17 c0       	rjmp	.+46     	; 0x10cc <GAME_Tick+0x3ae>
    109e:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
		case G_WAIT2:
			if ((button != NES_START) && (gameInPlay == 0x01) && (gameOver==0x00)&& (gameInPause == 0x00) && (gameEndTurn == 0x00))
			{
				state = G_WAIT2;
			}
			else if (button==(NES_START|NES_SELECT))
    10a2:	81 30       	cpi	r24, 0x01	; 1
    10a4:	f9 f6       	brne	.-66     	; 0x1064 <GAME_Tick+0x346>
    10a6:	95 ce       	rjmp	.-726    	; 0xdd2 <GAME_Tick+0xb4>
    10a8:	20 91 0f 01 	lds	r18, 0x010F	; 0x80010f <NES_SELECT>
    10ac:	92 2b       	or	r25, r18
			}
			else if ((button == NES_START) && (gameInPlay == 0x01) && (gameOver==0x00) && (gameInPause == 0x00) && (gameEndTurn == 0x00))
			{
				state = G_WAIT3;
			}
			else if ((gameInPlay == 0x01) && (gameOver==0x00)&& (gameInPause == 0x00) && (gameEndTurn == 0x01))
    10ae:	89 13       	cpse	r24, r25
    10b0:	8c ce       	rjmp	.-744    	; 0xdca <GAME_Tick+0xac>
    10b2:	9b ce       	rjmp	.-714    	; 0xdea <GAME_Tick+0xcc>
    10b4:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <gameOver>
    10b8:	99 23       	and	r25, r25
		case G_WAIT2:
			if ((button != NES_START) && (gameInPlay == 0x01) && (gameOver==0x00)&& (gameInPause == 0x00) && (gameEndTurn == 0x00))
			{
				state = G_WAIT2;
			}
			else if (button==(NES_START|NES_SELECT))
    10ba:	09 f4       	brne	.+2      	; 0x10be <GAME_Tick+0x3a0>
    10bc:	77 ce       	rjmp	.-786    	; 0xdac <GAME_Tick+0x8e>
    10be:	85 ce       	rjmp	.-758    	; 0xdca <GAME_Tick+0xac>
    10c0:	20 91 0f 01 	lds	r18, 0x010F	; 0x80010f <NES_SELECT>
    10c4:	92 2b       	or	r25, r18
		
		default:
		break;
	}
	return state;
};
    10c6:	89 13       	cpse	r24, r25
    10c8:	f5 cf       	rjmp	.-22     	; 0x10b4 <GAME_Tick+0x396>
    10ca:	8f ce       	rjmp	.-738    	; 0xdea <GAME_Tick+0xcc>
    10cc:	ce 01       	movw	r24, r28
    10ce:	df 91       	pop	r29
    10d0:	cf 91       	pop	r28
    10d2:	08 95       	ret

000010d4 <write_score>:
#define HELPER_FUNCTIONS_H

#include "io.h"

void write_score(unsigned char SCORE)
{
    10d4:	cf 93       	push	r28
    10d6:	df 93       	push	r29
	unsigned char SCORE_HUNDREDS_PLACE = 0x00;
	unsigned char SCORE_TENS_PLACE = 0x00;
	unsigned char SCORE_ONES_PLACE = 0x00;

	for (unsigned char index = 0;  index < SCORE; index++ )
    10d8:	88 23       	and	r24, r24
    10da:	99 f0       	breq	.+38     	; 0x1102 <write_score+0x2e>
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	c0 e0       	ldi	r28, 0x00	; 0
    10e0:	d0 e0       	ldi	r29, 0x00	; 0
    10e2:	20 e0       	ldi	r18, 0x00	; 0
	{
		SCORE_ONES_PLACE++;

		if (SCORE_TENS_PLACE >= 0x0A)
    10e4:	da 30       	cpi	r29, 0x0A	; 10
    10e6:	20 f0       	brcs	.+8      	; 0x10f0 <write_score+0x1c>
		{
			SCORE_HUNDREDS_PLACE++;
    10e8:	2f 5f       	subi	r18, 0xFF	; 255
			SCORE_TENS_PLACE = 0;
			SCORE_ONES_PLACE = 0;
    10ea:	c0 e0       	ldi	r28, 0x00	; 0
		SCORE_ONES_PLACE++;

		if (SCORE_TENS_PLACE >= 0x0A)
		{
			SCORE_HUNDREDS_PLACE++;
			SCORE_TENS_PLACE = 0;
    10ec:	d0 e0       	ldi	r29, 0x00	; 0
    10ee:	05 c0       	rjmp	.+10     	; 0x10fa <write_score+0x26>
	unsigned char SCORE_TENS_PLACE = 0x00;
	unsigned char SCORE_ONES_PLACE = 0x00;

	for (unsigned char index = 0;  index < SCORE; index++ )
	{
		SCORE_ONES_PLACE++;
    10f0:	cf 5f       	subi	r28, 0xFF	; 255
		{
			SCORE_HUNDREDS_PLACE++;
			SCORE_TENS_PLACE = 0;
			SCORE_ONES_PLACE = 0;
		}
		if (SCORE_ONES_PLACE >= 0x0A)
    10f2:	ca 30       	cpi	r28, 0x0A	; 10
    10f4:	10 f0       	brcs	.+4      	; 0x10fa <write_score+0x26>
		{
			SCORE_TENS_PLACE++;
    10f6:	df 5f       	subi	r29, 0xFF	; 255
			SCORE_ONES_PLACE = 0;
    10f8:	c0 e0       	ldi	r28, 0x00	; 0
{
	unsigned char SCORE_HUNDREDS_PLACE = 0x00;
	unsigned char SCORE_TENS_PLACE = 0x00;
	unsigned char SCORE_ONES_PLACE = 0x00;

	for (unsigned char index = 0;  index < SCORE; index++ )
    10fa:	9f 5f       	subi	r25, 0xFF	; 255
    10fc:	89 13       	cpse	r24, r25
    10fe:	f2 cf       	rjmp	.-28     	; 0x10e4 <write_score+0x10>
    1100:	03 c0       	rjmp	.+6      	; 0x1108 <write_score+0x34>

void write_score(unsigned char SCORE)
{
	unsigned char SCORE_HUNDREDS_PLACE = 0x00;
	unsigned char SCORE_TENS_PLACE = 0x00;
	unsigned char SCORE_ONES_PLACE = 0x00;
    1102:	c0 e0       	ldi	r28, 0x00	; 0
#include "io.h"

void write_score(unsigned char SCORE)
{
	unsigned char SCORE_HUNDREDS_PLACE = 0x00;
	unsigned char SCORE_TENS_PLACE = 0x00;
    1104:	d0 e0       	ldi	r29, 0x00	; 0

#include "io.h"

void write_score(unsigned char SCORE)
{
	unsigned char SCORE_HUNDREDS_PLACE = 0x00;
    1106:	20 e0       	ldi	r18, 0x00	; 0
		}
		
		
	}

	LCD_WriteData('0' + SCORE_HUNDREDS_PLACE);
    1108:	80 e3       	ldi	r24, 0x30	; 48
    110a:	82 0f       	add	r24, r18
    110c:	e6 dd       	rcall	.-1076   	; 0xcda <LCD_WriteData>
	LCD_WriteData('0' + SCORE_TENS_PLACE);
    110e:	80 e3       	ldi	r24, 0x30	; 48
    1110:	8d 0f       	add	r24, r29
	LCD_WriteData('0' + SCORE_ONES_PLACE);
    1112:	e3 dd       	rcall	.-1082   	; 0xcda <LCD_WriteData>
    1114:	80 e3       	ldi	r24, 0x30	; 48
	LCD_WriteData('0'); // Make the score a little bigger =P
    1116:	8c 0f       	add	r24, r28
    1118:	e0 dd       	rcall	.-1088   	; 0xcda <LCD_WriteData>
    111a:	80 e3       	ldi	r24, 0x30	; 48

}
    111c:	de dd       	rcall	.-1092   	; 0xcda <LCD_WriteData>
    111e:	df 91       	pop	r29
    1120:	cf 91       	pop	r28
    1122:	08 95       	ret

00001124 <draw_ball>:

void draw_ball(unsigned char col)
{
    1124:	c3 dd       	rcall	.-1146   	; 0xcac <LCD_Cursor>
    1126:	80 e0       	ldi	r24, 0x00	; 0
    1128:	d8 dd       	rcall	.-1104   	; 0xcda <LCD_WriteData>
    112a:	80 e4       	ldi	r24, 0x40	; 64
    112c:	b3 dd       	rcall	.-1178   	; 0xc94 <LCD_WriteCommand>
    112e:	80 e0       	ldi	r24, 0x00	; 0
    1130:	d4 dd       	rcall	.-1112   	; 0xcda <LCD_WriteData>
    1132:	8e e0       	ldi	r24, 0x0E	; 14
    1134:	d2 dd       	rcall	.-1116   	; 0xcda <LCD_WriteData>
    1136:	88 e1       	ldi	r24, 0x18	; 24
    1138:	d0 dd       	rcall	.-1120   	; 0xcda <LCD_WriteData>
    113a:	81 e1       	ldi	r24, 0x11	; 17
    113c:	ce dd       	rcall	.-1124   	; 0xcda <LCD_WriteData>
    113e:	88 e1       	ldi	r24, 0x18	; 24
    1140:	cc dd       	rcall	.-1128   	; 0xcda <LCD_WriteData>
    1142:	8e e0       	ldi	r24, 0x0E	; 14
    1144:	ca dd       	rcall	.-1132   	; 0xcda <LCD_WriteData>
    1146:	80 e0       	ldi	r24, 0x00	; 0
    1148:	c8 dd       	rcall	.-1136   	; 0xcda <LCD_WriteData>
    114a:	80 e0       	ldi	r24, 0x00	; 0
    114c:	c6 dd       	rcall	.-1140   	; 0xcda <LCD_WriteData>
    114e:	80 e8       	ldi	r24, 0x80	; 128
    1150:	a1 cd       	rjmp	.-1214   	; 0xc94 <LCD_WriteCommand>
    1152:	08 95       	ret

00001154 <LCD_OUTPUT_Tick>:
    1154:	1f 93       	push	r17
    1156:	cf 93       	push	r28
    1158:	df 93       	push	r29
    115a:	01 97       	sbiw	r24, 0x01	; 1
    115c:	89 30       	cpi	r24, 0x09	; 9
    115e:	91 05       	cpc	r25, r1
    1160:	08 f0       	brcs	.+2      	; 0x1164 <LCD_OUTPUT_Tick+0x10>
    1162:	95 c0       	rjmp	.+298    	; 0x128e <LCD_OUTPUT_Tick+0x13a>
    1164:	83 59       	subi	r24, 0x93	; 147
    1166:	9f 4f       	sbci	r25, 0xFF	; 255
    1168:	fc 01       	movw	r30, r24
    116a:	8a c2       	rjmp	.+1300   	; 0x1680 <__tablejump2__>
    116c:	5e dc       	rcall	.-1860   	; 0xa2a <GetNESControllerButton>
    116e:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <NES_DOWN_DPAD>
    1172:	89 13       	cpse	r24, r25
    1174:	11 c0       	rjmp	.+34     	; 0x1198 <LCD_OUTPUT_Tick+0x44>
    1176:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gameInPlay>
    117a:	81 11       	cpse	r24, r1
    117c:	0d c0       	rjmp	.+26     	; 0x1198 <LCD_OUTPUT_Tick+0x44>
    117e:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
    1182:	81 11       	cpse	r24, r1
    1184:	09 c0       	rjmp	.+18     	; 0x1198 <LCD_OUTPUT_Tick+0x44>
    1186:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
    118a:	81 11       	cpse	r24, r1
    118c:	05 c0       	rjmp	.+10     	; 0x1198 <LCD_OUTPUT_Tick+0x44>
    118e:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
    1192:	88 23       	and	r24, r24
    1194:	09 f4       	brne	.+2      	; 0x1198 <LCD_OUTPUT_Tick+0x44>
    1196:	24 c1       	rjmp	.+584    	; 0x13e0 <LCD_OUTPUT_Tick+0x28c>
    1198:	48 dc       	rcall	.-1904   	; 0xa2a <GetNESControllerButton>
    119a:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <NES_UP_DPAD>
    119e:	89 13       	cpse	r24, r25
    11a0:	12 c0       	rjmp	.+36     	; 0x11c6 <LCD_OUTPUT_Tick+0x72>
    11a2:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gameInPlay>
    11a6:	81 11       	cpse	r24, r1
    11a8:	2e c1       	rjmp	.+604    	; 0x1406 <LCD_OUTPUT_Tick+0x2b2>
    11aa:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
    11ae:	81 11       	cpse	r24, r1
    11b0:	2a c0       	rjmp	.+84     	; 0x1206 <LCD_OUTPUT_Tick+0xb2>
    11b2:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
    11b6:	81 11       	cpse	r24, r1
    11b8:	0e c0       	rjmp	.+28     	; 0x11d6 <LCD_OUTPUT_Tick+0x82>
    11ba:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
    11be:	88 23       	and	r24, r24
    11c0:	09 f4       	brne	.+2      	; 0x11c4 <LCD_OUTPUT_Tick+0x70>
    11c2:	16 c1       	rjmp	.+556    	; 0x13f0 <LCD_OUTPUT_Tick+0x29c>
    11c4:	08 c0       	rjmp	.+16     	; 0x11d6 <LCD_OUTPUT_Tick+0x82>
    11c6:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gameInPlay>
    11ca:	81 11       	cpse	r24, r1
    11cc:	1c c1       	rjmp	.+568    	; 0x1406 <LCD_OUTPUT_Tick+0x2b2>
    11ce:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
    11d2:	81 11       	cpse	r24, r1
    11d4:	18 c0       	rjmp	.+48     	; 0x1206 <LCD_OUTPUT_Tick+0xb2>
    11d6:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
    11da:	81 11       	cpse	r24, r1
    11dc:	18 c1       	rjmp	.+560    	; 0x140e <LCD_OUTPUT_Tick+0x2ba>
    11de:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
    11e2:	88 23       	and	r24, r24
    11e4:	09 f4       	brne	.+2      	; 0x11e8 <LCD_OUTPUT_Tick+0x94>
    11e6:	f4 c0       	rjmp	.+488    	; 0x13d0 <LCD_OUTPUT_Tick+0x27c>
    11e8:	12 c1       	rjmp	.+548    	; 0x140e <LCD_OUTPUT_Tick+0x2ba>
    11ea:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
    11ee:	81 11       	cpse	r24, r1
    11f0:	34 c0       	rjmp	.+104    	; 0x125a <LCD_OUTPUT_Tick+0x106>
    11f2:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
    11f6:	81 11       	cpse	r24, r1
    11f8:	12 c1       	rjmp	.+548    	; 0x141e <LCD_OUTPUT_Tick+0x2ca>
    11fa:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
    11fe:	88 23       	and	r24, r24
    1200:	09 f4       	brne	.+2      	; 0x1204 <LCD_OUTPUT_Tick+0xb0>
    1202:	75 c0       	rjmp	.+234    	; 0x12ee <LCD_OUTPUT_Tick+0x19a>
    1204:	0c c1       	rjmp	.+536    	; 0x141e <LCD_OUTPUT_Tick+0x2ca>
    1206:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
    120a:	81 30       	cpi	r24, 0x01	; 1
    120c:	51 f4       	brne	.+20     	; 0x1222 <LCD_OUTPUT_Tick+0xce>
    120e:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
    1212:	81 11       	cpse	r24, r1
    1214:	ff c0       	rjmp	.+510    	; 0x1414 <LCD_OUTPUT_Tick+0x2c0>
    1216:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
    121a:	88 23       	and	r24, r24
    121c:	09 f4       	brne	.+2      	; 0x1220 <LCD_OUTPUT_Tick+0xcc>
    121e:	c8 c0       	rjmp	.+400    	; 0x13b0 <LCD_OUTPUT_Tick+0x25c>
    1220:	f9 c0       	rjmp	.+498    	; 0x1414 <LCD_OUTPUT_Tick+0x2c0>
    1222:	81 11       	cpse	r24, r1
    1224:	1a c0       	rjmp	.+52     	; 0x125a <LCD_OUTPUT_Tick+0x106>
    1226:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
    122a:	81 30       	cpi	r24, 0x01	; 1
    122c:	61 f4       	brne	.+24     	; 0x1246 <LCD_OUTPUT_Tick+0xf2>
    122e:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
    1232:	88 23       	and	r24, r24
    1234:	09 f4       	brne	.+2      	; 0x1238 <LCD_OUTPUT_Tick+0xe4>
    1236:	92 c0       	rjmp	.+292    	; 0x135c <LCD_OUTPUT_Tick+0x208>
    1238:	06 c0       	rjmp	.+12     	; 0x1246 <LCD_OUTPUT_Tick+0xf2>
    123a:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
    123e:	88 23       	and	r24, r24
    1240:	09 f4       	brne	.+2      	; 0x1244 <LCD_OUTPUT_Tick+0xf0>
    1242:	8c c0       	rjmp	.+280    	; 0x135c <LCD_OUTPUT_Tick+0x208>
    1244:	0a c0       	rjmp	.+20     	; 0x125a <LCD_OUTPUT_Tick+0x106>
    1246:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
    124a:	88 23       	and	r24, r24
    124c:	09 f4       	brne	.+2      	; 0x1250 <LCD_OUTPUT_Tick+0xfc>
    124e:	95 c0       	rjmp	.+298    	; 0x137a <LCD_OUTPUT_Tick+0x226>
    1250:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
    1254:	81 30       	cpi	r24, 0x01	; 1
    1256:	31 f4       	brne	.+12     	; 0x1264 <LCD_OUTPUT_Tick+0x110>
    1258:	90 c0       	rjmp	.+288    	; 0x137a <LCD_OUTPUT_Tick+0x226>
    125a:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <gameOver>
    125e:	81 30       	cpi	r24, 0x01	; 1
    1260:	09 f4       	brne	.+2      	; 0x1264 <LCD_OUTPUT_Tick+0x110>
    1262:	8b c0       	rjmp	.+278    	; 0x137a <LCD_OUTPUT_Tick+0x226>
    1264:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <gameReset>
    1268:	81 30       	cpi	r24, 0x01	; 1
    126a:	89 f0       	breq	.+34     	; 0x128e <LCD_OUTPUT_Tick+0x13a>
    126c:	64 e3       	ldi	r22, 0x34	; 52
    126e:	71 e0       	ldi	r23, 0x01	; 1
    1270:	81 e0       	ldi	r24, 0x01	; 1
    1272:	3c dd       	rcall	.-1416   	; 0xcec <LCD_DisplayString>
    1274:	c5 c0       	rjmp	.+394    	; 0x1400 <LCD_OUTPUT_Tick+0x2ac>
    1276:	d9 db       	rcall	.-2126   	; 0xa2a <GetNESControllerButton>
    1278:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <NES_DOWN_DPAD>
    127c:	89 13       	cpse	r24, r25
    127e:	a8 c0       	rjmp	.+336    	; 0x13d0 <LCD_OUTPUT_Tick+0x27c>
    1280:	af c0       	rjmp	.+350    	; 0x13e0 <LCD_OUTPUT_Tick+0x28c>
    1282:	d3 db       	rcall	.-2138   	; 0xa2a <GetNESControllerButton>
    1284:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <NES_UP_DPAD>
    1288:	89 13       	cpse	r24, r25
    128a:	a2 c0       	rjmp	.+324    	; 0x13d0 <LCD_OUTPUT_Tick+0x27c>
    128c:	b1 c0       	rjmp	.+354    	; 0x13f0 <LCD_OUTPUT_Tick+0x29c>
    128e:	0b dd       	rcall	.-1514   	; 0xca6 <LCD_ClearScreen>
    1290:	81 e0       	ldi	r24, 0x01	; 1
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	ca c0       	rjmp	.+404    	; 0x142a <LCD_OUTPUT_Tick+0x2d6>
    1296:	81 e0       	ldi	r24, 0x01	; 1
    1298:	09 dd       	rcall	.-1518   	; 0xcac <LCD_Cursor>
    129a:	6a e3       	ldi	r22, 0x3A	; 58
    129c:	71 e0       	ldi	r23, 0x01	; 1
    129e:	81 e0       	ldi	r24, 0x01	; 1
    12a0:	25 dd       	rcall	.-1462   	; 0xcec <LCD_DisplayString>
    12a2:	80 e3       	ldi	r24, 0x30	; 48
    12a4:	03 dd       	rcall	.-1530   	; 0xcac <LCD_Cursor>
    12a6:	82 e0       	ldi	r24, 0x02	; 2
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    12ae:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    12b2:	bb c0       	rjmp	.+374    	; 0x142a <LCD_OUTPUT_Tick+0x2d6>
    12b4:	66 e5       	ldi	r22, 0x56	; 86
    12b6:	71 e0       	ldi	r23, 0x01	; 1
    12b8:	81 e0       	ldi	r24, 0x01	; 1
    12ba:	18 dd       	rcall	.-1488   	; 0xcec <LCD_DisplayString>
    12bc:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <HIGH_SCORE>
    12c0:	09 df       	rcall	.-494    	; 0x10d4 <write_score>
    12c2:	80 e3       	ldi	r24, 0x30	; 48
    12c4:	f3 dc       	rcall	.-1562   	; 0xcac <LCD_Cursor>
    12c6:	83 e0       	ldi	r24, 0x03	; 3
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    12ce:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    12d2:	ab c0       	rjmp	.+342    	; 0x142a <LCD_OUTPUT_Tick+0x2d6>
    12d4:	81 e0       	ldi	r24, 0x01	; 1
    12d6:	ea dc       	rcall	.-1580   	; 0xcac <LCD_Cursor>
    12d8:	62 e6       	ldi	r22, 0x62	; 98
    12da:	71 e0       	ldi	r23, 0x01	; 1
    12dc:	81 e0       	ldi	r24, 0x01	; 1
    12de:	06 dd       	rcall	.-1524   	; 0xcec <LCD_DisplayString>
    12e0:	84 e0       	ldi	r24, 0x04	; 4
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    12e8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    12ec:	9e c0       	rjmp	.+316    	; 0x142a <LCD_OUTPUT_Tick+0x2d6>
    12ee:	90 91 d2 01 	lds	r25, 0x01D2	; 0x8001d2 <SCORE>
    12f2:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <PREV_SCORE.2154>
    12f6:	98 17       	cp	r25, r24
    12f8:	51 f1       	breq	.+84     	; 0x134e <LCD_OUTPUT_Tick+0x1fa>
    12fa:	6a e9       	ldi	r22, 0x9A	; 154
    12fc:	71 e0       	ldi	r23, 0x01	; 1
    12fe:	81 e0       	ldi	r24, 0x01	; 1
    1300:	f5 dc       	rcall	.-1558   	; 0xcec <LCD_DisplayString>
    1302:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <SCORE>
    1306:	e6 de       	rcall	.-564    	; 0x10d4 <write_score>
    1308:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <gameNumberOfTurns>
    130c:	88 23       	and	r24, r24
    130e:	71 f0       	breq	.+28     	; 0x132c <LCD_OUTPUT_Tick+0x1d8>
    1310:	c0 e0       	ldi	r28, 0x00	; 0
    1312:	d0 e0       	ldi	r29, 0x00	; 0
    1314:	1c 2f       	mov	r17, r28
    1316:	1f 5e       	subi	r17, 0xEF	; 239
    1318:	81 2f       	mov	r24, r17
    131a:	04 df       	rcall	.-504    	; 0x1124 <draw_ball>
    131c:	21 96       	adiw	r28, 0x01	; 1
    131e:	1f 5f       	subi	r17, 0xFF	; 255
    1320:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <gameNumberOfTurns>
    1324:	90 e0       	ldi	r25, 0x00	; 0
    1326:	c8 17       	cp	r28, r24
    1328:	d9 07       	cpc	r29, r25
    132a:	b4 f3       	brlt	.-20     	; 0x1318 <LCD_OUTPUT_Tick+0x1c4>
    132c:	80 e3       	ldi	r24, 0x30	; 48
    132e:	be dc       	rcall	.-1668   	; 0xcac <LCD_Cursor>
    1330:	60 91 d2 01 	lds	r22, 0x01D2	; 0x8001d2 <SCORE>
    1334:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <HIGH_SCORE>
    1338:	86 17       	cp	r24, r22
    133a:	28 f4       	brcc	.+10     	; 0x1346 <LCD_OUTPUT_Tick+0x1f2>
    133c:	60 93 d8 01 	sts	0x01D8, r22	; 0x8001d8 <HIGH_SCORE>
    1340:	8e e2       	ldi	r24, 0x2E	; 46
    1342:	90 e0       	ldi	r25, 0x00	; 0
    1344:	ae d1       	rcall	.+860    	; 0x16a2 <eeprom_update_byte>
    1346:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <SCORE>
    134a:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <PREV_SCORE.2154>
    134e:	85 e0       	ldi	r24, 0x05	; 5
    1350:	90 e0       	ldi	r25, 0x00	; 0
    1352:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    1356:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    135a:	67 c0       	rjmp	.+206    	; 0x142a <LCD_OUTPUT_Tick+0x2d6>
    135c:	6e e7       	ldi	r22, 0x7E	; 126
    135e:	71 e0       	ldi	r23, 0x01	; 1
    1360:	81 e0       	ldi	r24, 0x01	; 1
    1362:	c4 dc       	rcall	.-1656   	; 0xcec <LCD_DisplayString>
    1364:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <gameNumberOfTurns>
    1368:	80 5d       	subi	r24, 0xD0	; 208
    136a:	b7 dc       	rcall	.-1682   	; 0xcda <LCD_WriteData>
    136c:	87 e0       	ldi	r24, 0x07	; 7
    136e:	90 e0       	ldi	r25, 0x00	; 0
    1370:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    1374:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    1378:	58 c0       	rjmp	.+176    	; 0x142a <LCD_OUTPUT_Tick+0x2d6>
    137a:	6a e8       	ldi	r22, 0x8A	; 138
    137c:	71 e0       	ldi	r23, 0x01	; 1
    137e:	81 e0       	ldi	r24, 0x01	; 1
    1380:	b5 dc       	rcall	.-1686   	; 0xcec <LCD_DisplayString>
    1382:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <SCORE>
    1386:	a6 de       	rcall	.-692    	; 0x10d4 <write_score>
    1388:	80 e3       	ldi	r24, 0x30	; 48
    138a:	90 dc       	rcall	.-1760   	; 0xcac <LCD_Cursor>
    138c:	60 91 d2 01 	lds	r22, 0x01D2	; 0x8001d2 <SCORE>
    1390:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <HIGH_SCORE>
    1394:	86 17       	cp	r24, r22
    1396:	28 f4       	brcc	.+10     	; 0x13a2 <LCD_OUTPUT_Tick+0x24e>
    1398:	60 93 d8 01 	sts	0x01D8, r22	; 0x8001d8 <HIGH_SCORE>
    139c:	8e e2       	ldi	r24, 0x2E	; 46
    139e:	90 e0       	ldi	r25, 0x00	; 0
    13a0:	92 d1       	rcall	.+804    	; 0x16c6 <eeprom_write_byte>
    13a2:	88 e0       	ldi	r24, 0x08	; 8
    13a4:	90 e0       	ldi	r25, 0x00	; 0
    13a6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    13aa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    13ae:	3d c0       	rjmp	.+122    	; 0x142a <LCD_OUTPUT_Tick+0x2d6>
    13b0:	61 ea       	ldi	r22, 0xA1	; 161
    13b2:	71 e0       	ldi	r23, 0x01	; 1
    13b4:	81 e0       	ldi	r24, 0x01	; 1
    13b6:	9a dc       	rcall	.-1740   	; 0xcec <LCD_DisplayString>
    13b8:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <SCORE>
    13bc:	8b de       	rcall	.-746    	; 0x10d4 <write_score>
    13be:	80 e3       	ldi	r24, 0x30	; 48
    13c0:	75 dc       	rcall	.-1814   	; 0xcac <LCD_Cursor>
    13c2:	86 e0       	ldi	r24, 0x06	; 6
    13c4:	90 e0       	ldi	r25, 0x00	; 0
    13c6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    13ca:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    13ce:	2d c0       	rjmp	.+90     	; 0x142a <LCD_OUTPUT_Tick+0x2d6>
    13d0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    13d4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    13d8:	02 97       	sbiw	r24, 0x02	; 2
    13da:	09 f0       	breq	.+2      	; 0x13de <LCD_OUTPUT_Tick+0x28a>
    13dc:	5c cf       	rjmp	.-328    	; 0x1296 <LCD_OUTPUT_Tick+0x142>
    13de:	63 cf       	rjmp	.-314    	; 0x12a6 <LCD_OUTPUT_Tick+0x152>
    13e0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    13e4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    13e8:	03 97       	sbiw	r24, 0x03	; 3
    13ea:	09 f0       	breq	.+2      	; 0x13ee <LCD_OUTPUT_Tick+0x29a>
    13ec:	63 cf       	rjmp	.-314    	; 0x12b4 <LCD_OUTPUT_Tick+0x160>
    13ee:	6b cf       	rjmp	.-298    	; 0x12c6 <LCD_OUTPUT_Tick+0x172>
    13f0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    13f4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    13f8:	04 97       	sbiw	r24, 0x04	; 4
    13fa:	09 f0       	breq	.+2      	; 0x13fe <LCD_OUTPUT_Tick+0x2aa>
    13fc:	6b cf       	rjmp	.-298    	; 0x12d4 <LCD_OUTPUT_Tick+0x180>
    13fe:	70 cf       	rjmp	.-288    	; 0x12e0 <LCD_OUTPUT_Tick+0x18c>
    1400:	89 e0       	ldi	r24, 0x09	; 9
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	12 c0       	rjmp	.+36     	; 0x142a <LCD_OUTPUT_Tick+0x2d6>
    1406:	81 30       	cpi	r24, 0x01	; 1
    1408:	09 f4       	brne	.+2      	; 0x140c <LCD_OUTPUT_Tick+0x2b8>
    140a:	ef ce       	rjmp	.-546    	; 0x11ea <LCD_OUTPUT_Tick+0x96>
    140c:	26 cf       	rjmp	.-436    	; 0x125a <LCD_OUTPUT_Tick+0x106>
    140e:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
    1412:	07 cf       	rjmp	.-498    	; 0x1222 <LCD_OUTPUT_Tick+0xce>
    1414:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <gameInPause>
    1418:	81 11       	cpse	r24, r1
    141a:	1f cf       	rjmp	.-450    	; 0x125a <LCD_OUTPUT_Tick+0x106>
    141c:	14 cf       	rjmp	.-472    	; 0x1246 <LCD_OUTPUT_Tick+0xf2>
    141e:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <gameEndTurn>
    1422:	81 30       	cpi	r24, 0x01	; 1
    1424:	09 f0       	breq	.+2      	; 0x1428 <LCD_OUTPUT_Tick+0x2d4>
    1426:	19 cf       	rjmp	.-462    	; 0x125a <LCD_OUTPUT_Tick+0x106>
    1428:	08 cf       	rjmp	.-496    	; 0x123a <LCD_OUTPUT_Tick+0xe6>
    142a:	df 91       	pop	r29
    142c:	cf 91       	pop	r28
    142e:	1f 91       	pop	r17
    1430:	08 95       	ret

00001432 <TimerISR>:
    1432:	ef 92       	push	r14
    1434:	ff 92       	push	r15
    1436:	0f 93       	push	r16
    1438:	1f 93       	push	r17
    143a:	cf 93       	push	r28
    143c:	df 93       	push	r29
    143e:	c9 ed       	ldi	r28, 0xD9	; 217
    1440:	d1 e0       	ldi	r29, 0x01	; 1
    1442:	0f 2e       	mov	r0, r31
    1444:	f1 e2       	ldi	r31, 0x21	; 33
    1446:	ef 2e       	mov	r14, r31
    1448:	f2 e0       	ldi	r31, 0x02	; 2
    144a:	ff 2e       	mov	r15, r31
    144c:	f0 2d       	mov	r31, r0
    144e:	8e 01       	movw	r16, r28
    1450:	4e 81       	ldd	r20, Y+6	; 0x06
    1452:	5f 81       	ldd	r21, Y+7	; 0x07
    1454:	68 85       	ldd	r22, Y+8	; 0x08
    1456:	79 85       	ldd	r23, Y+9	; 0x09
    1458:	8a 81       	ldd	r24, Y+2	; 0x02
    145a:	9b 81       	ldd	r25, Y+3	; 0x03
    145c:	ac 81       	ldd	r26, Y+4	; 0x04
    145e:	bd 81       	ldd	r27, Y+5	; 0x05
    1460:	48 17       	cp	r20, r24
    1462:	59 07       	cpc	r21, r25
    1464:	6a 07       	cpc	r22, r26
    1466:	7b 07       	cpc	r23, r27
    1468:	58 f0       	brcs	.+22     	; 0x1480 <TimerISR+0x4e>
    146a:	ea 85       	ldd	r30, Y+10	; 0x0a
    146c:	fb 85       	ldd	r31, Y+11	; 0x0b
    146e:	88 81       	ld	r24, Y
    1470:	99 81       	ldd	r25, Y+1	; 0x01
    1472:	09 95       	icall
    1474:	99 83       	std	Y+1, r25	; 0x01
    1476:	88 83       	st	Y, r24
    1478:	1e 82       	std	Y+6, r1	; 0x06
    147a:	1f 82       	std	Y+7, r1	; 0x07
    147c:	18 86       	std	Y+8, r1	; 0x08
    147e:	19 86       	std	Y+9, r1	; 0x09
    1480:	f8 01       	movw	r30, r16
    1482:	86 81       	ldd	r24, Z+6	; 0x06
    1484:	97 81       	ldd	r25, Z+7	; 0x07
    1486:	a0 85       	ldd	r26, Z+8	; 0x08
    1488:	b1 85       	ldd	r27, Z+9	; 0x09
    148a:	01 96       	adiw	r24, 0x01	; 1
    148c:	a1 1d       	adc	r26, r1
    148e:	b1 1d       	adc	r27, r1
    1490:	86 83       	std	Z+6, r24	; 0x06
    1492:	97 83       	std	Z+7, r25	; 0x07
    1494:	a0 87       	std	Z+8, r26	; 0x08
    1496:	b1 87       	std	Z+9, r27	; 0x09
    1498:	2c 96       	adiw	r28, 0x0c	; 12
    149a:	ce 15       	cp	r28, r14
    149c:	df 05       	cpc	r29, r15
    149e:	b9 f6       	brne	.-82     	; 0x144e <TimerISR+0x1c>
    14a0:	81 e0       	ldi	r24, 0x01	; 1
    14a2:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <TimerFlag>
    14a6:	df 91       	pop	r29
    14a8:	cf 91       	pop	r28
    14aa:	1f 91       	pop	r17
    14ac:	0f 91       	pop	r16
    14ae:	ff 90       	pop	r15
    14b0:	ef 90       	pop	r14
    14b2:	08 95       	ret

000014b4 <__vector_13>:
    14b4:	1f 92       	push	r1
    14b6:	0f 92       	push	r0
    14b8:	0f b6       	in	r0, 0x3f	; 63
    14ba:	0f 92       	push	r0
    14bc:	11 24       	eor	r1, r1
    14be:	0b b6       	in	r0, 0x3b	; 59
    14c0:	0f 92       	push	r0
    14c2:	2f 93       	push	r18
    14c4:	3f 93       	push	r19
    14c6:	4f 93       	push	r20
    14c8:	5f 93       	push	r21
    14ca:	6f 93       	push	r22
    14cc:	7f 93       	push	r23
    14ce:	8f 93       	push	r24
    14d0:	9f 93       	push	r25
    14d2:	af 93       	push	r26
    14d4:	bf 93       	push	r27
    14d6:	ef 93       	push	r30
    14d8:	ff 93       	push	r31
    14da:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <_avr_timer_cntcurr>
    14de:	90 91 d4 01 	lds	r25, 0x01D4	; 0x8001d4 <_avr_timer_cntcurr+0x1>
    14e2:	a0 91 d5 01 	lds	r26, 0x01D5	; 0x8001d5 <_avr_timer_cntcurr+0x2>
    14e6:	b0 91 d6 01 	lds	r27, 0x01D6	; 0x8001d6 <_avr_timer_cntcurr+0x3>
    14ea:	01 97       	sbiw	r24, 0x01	; 1
    14ec:	a1 09       	sbc	r26, r1
    14ee:	b1 09       	sbc	r27, r1
    14f0:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <_avr_timer_cntcurr>
    14f4:	90 93 d4 01 	sts	0x01D4, r25	; 0x8001d4 <_avr_timer_cntcurr+0x1>
    14f8:	a0 93 d5 01 	sts	0x01D5, r26	; 0x8001d5 <_avr_timer_cntcurr+0x2>
    14fc:	b0 93 d6 01 	sts	0x01D6, r27	; 0x8001d6 <_avr_timer_cntcurr+0x3>
    1500:	89 2b       	or	r24, r25
    1502:	8a 2b       	or	r24, r26
    1504:	8b 2b       	or	r24, r27
    1506:	89 f4       	brne	.+34     	; 0x152a <__vector_13+0x76>
    1508:	94 df       	rcall	.-216    	; 0x1432 <TimerISR>
    150a:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <_avr_timer_M>
    150e:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <_avr_timer_M+0x1>
    1512:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <_avr_timer_M+0x2>
    1516:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <_avr_timer_M+0x3>
    151a:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <_avr_timer_cntcurr>
    151e:	90 93 d4 01 	sts	0x01D4, r25	; 0x8001d4 <_avr_timer_cntcurr+0x1>
    1522:	a0 93 d5 01 	sts	0x01D5, r26	; 0x8001d5 <_avr_timer_cntcurr+0x2>
    1526:	b0 93 d6 01 	sts	0x01D6, r27	; 0x8001d6 <_avr_timer_cntcurr+0x3>
    152a:	ff 91       	pop	r31
    152c:	ef 91       	pop	r30
    152e:	bf 91       	pop	r27
    1530:	af 91       	pop	r26
    1532:	9f 91       	pop	r25
    1534:	8f 91       	pop	r24
    1536:	7f 91       	pop	r23
    1538:	6f 91       	pop	r22
    153a:	5f 91       	pop	r21
    153c:	4f 91       	pop	r20
    153e:	3f 91       	pop	r19
    1540:	2f 91       	pop	r18
    1542:	0f 90       	pop	r0
    1544:	0b be       	out	0x3b, r0	; 59
    1546:	0f 90       	pop	r0
    1548:	0f be       	out	0x3f, r0	; 63
    154a:	0f 90       	pop	r0
    154c:	1f 90       	pop	r1
    154e:	18 95       	reti

00001550 <main>:
    1550:	8f ef       	ldi	r24, 0xFF	; 255
    1552:	81 b9       	out	0x01, r24	; 1
    1554:	12 b8       	out	0x02, r1	; 2
    1556:	84 b9       	out	0x04, r24	; 4
    1558:	15 b8       	out	0x05, r1	; 5
    155a:	9b ef       	ldi	r25, 0xFB	; 251
    155c:	97 b9       	out	0x07, r25	; 7
    155e:	94 e0       	ldi	r25, 0x04	; 4
    1560:	98 b9       	out	0x08, r25	; 8
    1562:	8a b9       	out	0x0a, r24	; 10
    1564:	1b b8       	out	0x0b, r1	; 11
    1566:	e9 ed       	ldi	r30, 0xD9	; 217
    1568:	f1 e0       	ldi	r31, 0x01	; 1
    156a:	11 82       	std	Z+1, r1	; 0x01
    156c:	10 82       	st	Z, r1
    156e:	8e e1       	ldi	r24, 0x1E	; 30
    1570:	90 e0       	ldi	r25, 0x00	; 0
    1572:	a0 e0       	ldi	r26, 0x00	; 0
    1574:	b0 e0       	ldi	r27, 0x00	; 0
    1576:	82 83       	std	Z+2, r24	; 0x02
    1578:	93 83       	std	Z+3, r25	; 0x03
    157a:	a4 83       	std	Z+4, r26	; 0x04
    157c:	b5 83       	std	Z+5, r27	; 0x05
    157e:	86 83       	std	Z+6, r24	; 0x06
    1580:	97 83       	std	Z+7, r25	; 0x07
    1582:	a0 87       	std	Z+8, r26	; 0x08
    1584:	b1 87       	std	Z+9, r27	; 0x09
    1586:	82 e3       	ldi	r24, 0x32	; 50
    1588:	95 e0       	ldi	r25, 0x05	; 5
    158a:	93 87       	std	Z+11, r25	; 0x0b
    158c:	82 87       	std	Z+10, r24	; 0x0a
    158e:	15 86       	std	Z+13, r1	; 0x0d
    1590:	14 86       	std	Z+12, r1	; 0x0c
    1592:	86 e9       	ldi	r24, 0x96	; 150
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	a0 e0       	ldi	r26, 0x00	; 0
    1598:	b0 e0       	ldi	r27, 0x00	; 0
    159a:	86 87       	std	Z+14, r24	; 0x0e
    159c:	97 87       	std	Z+15, r25	; 0x0f
    159e:	a0 8b       	std	Z+16, r26	; 0x10
    15a0:	b1 8b       	std	Z+17, r27	; 0x11
    15a2:	82 8b       	std	Z+18, r24	; 0x12
    15a4:	93 8b       	std	Z+19, r25	; 0x13
    15a6:	a4 8b       	std	Z+20, r26	; 0x14
    15a8:	b5 8b       	std	Z+21, r27	; 0x15
    15aa:	81 e6       	ldi	r24, 0x61	; 97
    15ac:	91 e0       	ldi	r25, 0x01	; 1
    15ae:	97 8b       	std	Z+23, r25	; 0x17
    15b0:	86 8b       	std	Z+22, r24	; 0x16
    15b2:	11 8e       	std	Z+25, r1	; 0x19
    15b4:	10 8e       	std	Z+24, r1	; 0x18
    15b6:	82 e3       	ldi	r24, 0x32	; 50
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	a0 e0       	ldi	r26, 0x00	; 0
    15bc:	b0 e0       	ldi	r27, 0x00	; 0
    15be:	82 8f       	std	Z+26, r24	; 0x1a
    15c0:	93 8f       	std	Z+27, r25	; 0x1b
    15c2:	a4 8f       	std	Z+28, r26	; 0x1c
    15c4:	b5 8f       	std	Z+29, r27	; 0x1d
    15c6:	86 8f       	std	Z+30, r24	; 0x1e
    15c8:	97 8f       	std	Z+31, r25	; 0x1f
    15ca:	a0 a3       	std	Z+32, r26	; 0x20
    15cc:	b1 a3       	std	Z+33, r27	; 0x21
    15ce:	80 e5       	ldi	r24, 0x50	; 80
    15d0:	94 e0       	ldi	r25, 0x04	; 4
    15d2:	93 a3       	std	Z+35, r25	; 0x23
    15d4:	82 a3       	std	Z+34, r24	; 0x22
    15d6:	15 a2       	std	Z+37, r1	; 0x25
    15d8:	14 a2       	std	Z+36, r1	; 0x24
    15da:	81 e0       	ldi	r24, 0x01	; 1
    15dc:	90 e0       	ldi	r25, 0x00	; 0
    15de:	a0 e0       	ldi	r26, 0x00	; 0
    15e0:	b0 e0       	ldi	r27, 0x00	; 0
    15e2:	86 a3       	std	Z+38, r24	; 0x26
    15e4:	97 a3       	std	Z+39, r25	; 0x27
    15e6:	a0 a7       	std	Z+40, r26	; 0x28
    15e8:	b1 a7       	std	Z+41, r27	; 0x29
    15ea:	82 a7       	std	Z+42, r24	; 0x2a
    15ec:	93 a7       	std	Z+43, r25	; 0x2b
    15ee:	a4 a7       	std	Z+44, r26	; 0x2c
    15f0:	b5 a7       	std	Z+45, r27	; 0x2d
    15f2:	29 ee       	ldi	r18, 0xE9	; 233
    15f4:	34 e0       	ldi	r19, 0x04	; 4
    15f6:	37 a7       	std	Z+47, r19	; 0x2f
    15f8:	26 a7       	std	Z+46, r18	; 0x2e
    15fa:	11 aa       	std	Z+49, r1	; 0x31
    15fc:	10 aa       	std	Z+48, r1	; 0x30
    15fe:	48 ec       	ldi	r20, 0xC8	; 200
    1600:	50 e0       	ldi	r21, 0x00	; 0
    1602:	60 e0       	ldi	r22, 0x00	; 0
    1604:	70 e0       	ldi	r23, 0x00	; 0
    1606:	42 ab       	std	Z+50, r20	; 0x32
    1608:	53 ab       	std	Z+51, r21	; 0x33
    160a:	64 ab       	std	Z+52, r22	; 0x34
    160c:	75 ab       	std	Z+53, r23	; 0x35
    160e:	46 ab       	std	Z+54, r20	; 0x36
    1610:	57 ab       	std	Z+55, r21	; 0x37
    1612:	60 af       	std	Z+56, r22	; 0x38
    1614:	71 af       	std	Z+57, r23	; 0x39
    1616:	2a ea       	ldi	r18, 0xAA	; 170
    1618:	38 e0       	ldi	r19, 0x08	; 8
    161a:	33 af       	std	Z+59, r19	; 0x3b
    161c:	22 af       	std	Z+58, r18	; 0x3a
    161e:	15 ae       	std	Z+61, r1	; 0x3d
    1620:	14 ae       	std	Z+60, r1	; 0x3c
    1622:	80 93 17 02 	sts	0x0217, r24	; 0x800217 <tasks+0x3e>
    1626:	90 93 18 02 	sts	0x0218, r25	; 0x800218 <tasks+0x3f>
    162a:	a0 93 19 02 	sts	0x0219, r26	; 0x800219 <tasks+0x40>
    162e:	b0 93 1a 02 	sts	0x021A, r27	; 0x80021a <tasks+0x41>
    1632:	80 93 1b 02 	sts	0x021B, r24	; 0x80021b <tasks+0x42>
    1636:	90 93 1c 02 	sts	0x021C, r25	; 0x80021c <tasks+0x43>
    163a:	a0 93 1d 02 	sts	0x021D, r26	; 0x80021d <tasks+0x44>
    163e:	b0 93 1e 02 	sts	0x021E, r27	; 0x80021e <tasks+0x45>
    1642:	8f e8       	ldi	r24, 0x8F	; 143
    1644:	96 e0       	ldi	r25, 0x06	; 6
    1646:	90 93 20 02 	sts	0x0220, r25	; 0x800220 <tasks+0x47>
    164a:	80 93 1f 02 	sts	0x021F, r24	; 0x80021f <tasks+0x46>
    164e:	8e e2       	ldi	r24, 0x2E	; 46
    1650:	90 e0       	ldi	r25, 0x00	; 0
    1652:	1f d0       	rcall	.+62     	; 0x1692 <eeprom_read_byte>
    1654:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <HIGH_SCORE>
    1658:	61 e0       	ldi	r22, 0x01	; 1
    165a:	70 e0       	ldi	r23, 0x00	; 0
    165c:	80 e0       	ldi	r24, 0x00	; 0
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	d1 da       	rcall	.-2654   	; 0xc04 <TimerSet>
    1662:	e1 da       	rcall	.-2622   	; 0xc26 <TimerOn>
    1664:	2b db       	rcall	.-2474   	; 0xcbc <LCD_init>
    1666:	81 e0       	ldi	r24, 0x01	; 1
    1668:	21 db       	rcall	.-2494   	; 0xcac <LCD_Cursor>
    166a:	68 eb       	ldi	r22, 0xB8	; 184
    166c:	71 e0       	ldi	r23, 0x01	; 1
    166e:	81 e0       	ldi	r24, 0x01	; 1
    1670:	3d db       	rcall	.-2438   	; 0xcec <LCD_DisplayString>
    1672:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <TimerFlag>
    1676:	88 23       	and	r24, r24
    1678:	e1 f3       	breq	.-8      	; 0x1672 <main+0x122>
    167a:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <TimerFlag>
    167e:	f9 cf       	rjmp	.-14     	; 0x1672 <main+0x122>

00001680 <__tablejump2__>:
    1680:	ee 0f       	add	r30, r30
    1682:	ff 1f       	adc	r31, r31
    1684:	00 24       	eor	r0, r0
    1686:	00 1c       	adc	r0, r0
    1688:	0b be       	out	0x3b, r0	; 59
    168a:	07 90       	elpm	r0, Z+
    168c:	f6 91       	elpm	r31, Z
    168e:	e0 2d       	mov	r30, r0
    1690:	09 94       	ijmp

00001692 <eeprom_read_byte>:
    1692:	f9 99       	sbic	0x1f, 1	; 31
    1694:	fe cf       	rjmp	.-4      	; 0x1692 <eeprom_read_byte>
    1696:	92 bd       	out	0x22, r25	; 34
    1698:	81 bd       	out	0x21, r24	; 33
    169a:	f8 9a       	sbi	0x1f, 0	; 31
    169c:	99 27       	eor	r25, r25
    169e:	80 b5       	in	r24, 0x20	; 32
    16a0:	08 95       	ret

000016a2 <eeprom_update_byte>:
    16a2:	26 2f       	mov	r18, r22

000016a4 <eeprom_update_r18>:
    16a4:	f9 99       	sbic	0x1f, 1	; 31
    16a6:	fe cf       	rjmp	.-4      	; 0x16a4 <eeprom_update_r18>
    16a8:	92 bd       	out	0x22, r25	; 34
    16aa:	81 bd       	out	0x21, r24	; 33
    16ac:	f8 9a       	sbi	0x1f, 0	; 31
    16ae:	01 97       	sbiw	r24, 0x01	; 1
    16b0:	00 b4       	in	r0, 0x20	; 32
    16b2:	02 16       	cp	r0, r18
    16b4:	39 f0       	breq	.+14     	; 0x16c4 <eeprom_update_r18+0x20>
    16b6:	1f ba       	out	0x1f, r1	; 31
    16b8:	20 bd       	out	0x20, r18	; 32
    16ba:	0f b6       	in	r0, 0x3f	; 63
    16bc:	f8 94       	cli
    16be:	fa 9a       	sbi	0x1f, 2	; 31
    16c0:	f9 9a       	sbi	0x1f, 1	; 31
    16c2:	0f be       	out	0x3f, r0	; 63
    16c4:	08 95       	ret

000016c6 <eeprom_write_byte>:
    16c6:	26 2f       	mov	r18, r22

000016c8 <eeprom_write_r18>:
    16c8:	f9 99       	sbic	0x1f, 1	; 31
    16ca:	fe cf       	rjmp	.-4      	; 0x16c8 <eeprom_write_r18>
    16cc:	1f ba       	out	0x1f, r1	; 31
    16ce:	92 bd       	out	0x22, r25	; 34
    16d0:	81 bd       	out	0x21, r24	; 33
    16d2:	20 bd       	out	0x20, r18	; 32
    16d4:	0f b6       	in	r0, 0x3f	; 63
    16d6:	f8 94       	cli
    16d8:	fa 9a       	sbi	0x1f, 2	; 31
    16da:	f9 9a       	sbi	0x1f, 1	; 31
    16dc:	0f be       	out	0x3f, r0	; 63
    16de:	01 96       	adiw	r24, 0x01	; 1
    16e0:	08 95       	ret

000016e2 <_exit>:
    16e2:	f8 94       	cli

000016e4 <__stop_program>:
    16e4:	ff cf       	rjmp	.-2      	; 0x16e4 <__stop_program>
